var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.889,1,2.153]],["body/controllers/AppController.html",[0,1.489,1,3.605,2,1.218,3,0.317,4,0.27,5,0.27,6,3.773,7,0.636,8,1.489,9,5.187,10,1.412,11,0.029,12,0.76,13,4.488,14,1.218,15,1.186,16,0.388,17,0.577,18,3.214,19,3.773,20,0.317,21,0.317,22,4.488,23,4.488,24,1.218,25,4.488,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,0.889,29,2.153]],["body/modules/AppModule.html",[1,3.194,2,1.142,3,0.212,4,0.181,5,0.181,11,0.029,16,0.448,17,0.385,18,3.122,19,2.519,20,0.212,21,0.212,26,0.018,27,0.018,28,1.319,29,4.311,30,1.177,31,1.177,32,1.375,33,1.375,34,1.177,35,2.23,36,1.375,37,2.519,38,2.519,39,2.519,40,3.422,41,3.422,42,3.422,43,3.422,44,3.422,45,3.422,46,1.93,47,1.375,48,1.271,49,2.996,50,2.094,51,0.599,52,0.599,53,0.599,54,2.996,55,2.996,56,1.492,57,0.813,58,4.859,59,0.813,60,2.996,61,1.092,62,1.375,63,2.996,64,2.996,65,2.996,66,2.996,67,2.519,68,1.969,69,1.492,70,2.996,71,2.996,72,3.463,73,2.996,74,0.507,75,2.996,76,2.996,77,2.996,78,2.996,79,2.996,80,1.782,81,2.996,82,1.969,83,2.996,84,2.996,85,2.996,86,1.375,87,2.996,88,2.996,89,2.996,90,2.996,91,2.996,92,0.876,93,0.876]],["title/injectables/AppService.html",[18,1.777,94,0.655]],["body/injectables/AppService.html",[3,0.329,4,0.281,5,0.281,7,0.66,8,1.523,9,5.253,11,0.028,12,0.789,14,1.264,15,1.213,16,0.329,17,0.599,18,3.044,20,0.329,21,0.329,24,1.264,26,0.024,27,0.024,94,1.121,95,1.83,96,3.916,97,4.658,98,4.658,99,4.658]],["title/entities/Appointments.html",[100,1.03,101,1.631]],["body/entities/Appointments.html",[3,0.235,4,0.2,5,0.2,7,0.47,10,1.911,11,0.029,12,1.029,15,0.976,16,0.319,20,0.235,21,0.235,26,0.019,27,0.019,51,0.663,52,0.663,53,0.663,59,0.901,72,2.967,74,1.062,86,1.523,100,1.42,101,2.248,102,2.791,103,2.071,104,3.424,105,2.783,106,3.372,107,1.499,108,3.05,109,3.774,110,3.05,111,1.609,112,2.182,113,4.514,114,3.795,115,3.795,116,3.32,117,2.43,118,5.13,119,3.32,120,2.685,121,3.274,122,3.795,123,3.32,124,1.054,125,2.783,126,3.32,127,3.32,128,3.124,129,3.32,130,5.13,131,3.32,132,2.967,133,1.653]],["title/controllers/AppointmentsController.html",[0,0.889,134,2.153]],["body/controllers/AppointmentsController.html",[0,1.024,2,1.024,3,0.267,4,0.227,5,0.227,7,0.534,8,1.335,10,1.546,11,0.029,12,0.833,14,1.335,15,1.183,16,0.347,17,0.485,20,0.267,21,0.267,24,1.335,26,0.021,27,0.021,51,0.754,52,0.754,53,0.754,74,0.926,92,1.103,93,1.103,101,1.879,106,2.48,108,2.244,109,2.776,124,0.882,134,3.232,135,3.173,136,2.048,137,1.938,138,4.133,139,4.871,140,3.774,141,2.256,142,3.774,143,3.774,144,1.187,145,1.024,146,1.187,147,2.967,148,2.924,149,3.774,150,3.774,151,2.048,152,2.048,153,2.668,154,3.173,155,3.774,156,3.774,157,3.774,158,2.244,159,3.774,160,2.48,161,3.774,162,2.244,163,3.774]],["title/modules/AppointmentsModule.html",[28,0.889,40,1.948]],["body/modules/AppointmentsModule.html",[2,1.362,3,0.275,4,0.235,5,0.235,11,0.029,16,0.439,17,0.501,20,0.275,21,0.275,26,0.021,27,0.021,28,1.507,30,1.53,31,1.53,32,1.787,33,1.787,34,1.53,35,2.547,36,2.547,40,3.758,46,2.302,47,1.787,48,1.651,50,1.939,51,0.778,52,0.778,53,0.778,56,1.939,57,1.057,101,1.939,111,1.466,133,1.939,134,3.648,153,3.584,154,3.273,164,3.273,165,3.273,166,3.273,167,3.894,168,3.894,169,3.273,170,3.894]],["title/injectables/AppointmentsService.html",[94,0.655,153,1.777]],["body/injectables/AppointmentsService.html",[3,0.227,4,0.194,5,0.194,7,0.456,8,1.199,11,0.029,12,0.855,14,1.199,15,1.091,16,0.402,17,0.414,20,0.227,21,0.227,24,1.199,26,0.019,27,0.019,57,0.873,59,0.873,74,0.92,92,1.291,93,1.291,94,0.883,95,1.264,101,1.602,104,3.386,106,2.904,107,0.94,108,2.628,109,3.251,111,0.94,124,0.751,133,1.602,137,1.85,138,3.714,139,4.567,141,2.027,144,1.39,145,1.199,146,1.39,153,2.397,160,2.115,169,2.704,171,2.704,172,3.217,173,2.765,174,5.047,175,3.217,176,4.419,177,4.419,178,3.217,179,3.217,180,2.304,181,3.217,182,3.217,183,1.602,184,3.217,185,2.367,186,2.2,187,2.316,188,3.217,189,4.419,190,2.115,191,3.001,192,3.217,193,3.217,194,3.217,195,3.217,196,3.217,197,2.704,198,3.217,199,3.217,200,3.217,201,3.217,202,3.217,203,2.704,204,3.217,205,3.217,206,2.704]],["title/entities/Articles.html",[61,1.194,100,1.03]],["body/entities/Articles.html",[3,0.203,4,0.173,5,0.173,7,0.406,10,1.909,11,0.029,12,1.028,15,1.118,16,0.288,20,0.203,21,0.203,26,0.017,27,0.017,51,0.573,52,0.573,53,0.573,59,0.779,61,1.487,62,1.316,74,1.095,86,1.316,100,1.283,103,1.871,105,2.575,107,1.387,110,2.822,117,2.031,120,3.471,121,3.073,124,1.393,125,2.575,128,3.236,145,1.288,207,2.412,208,3.022,209,3.491,210,4.746,211,4.746,212,4.746,213,2.111,214,4.079,215,2.869,216,3.397,217,3.729,218,2.869,219,4.345,220,4.345,221,3.429,222,2.869,223,2.869,224,4.079,225,2.869,226,5.673,227,2.869,228,2.869,229,2.869,230,2.681,231,2.869,232,1.428,233,1.428,234,3]],["title/entities/ArticlesClients.html",[100,1.03,208,1.631]],["body/entities/ArticlesClients.html",[3,0.213,4,0.181,5,0.181,7,0.426,10,1.812,11,0.029,12,0.976,16,0.344,20,0.213,21,0.213,26,0.018,27,0.018,51,0.601,52,0.601,53,0.601,59,0.817,61,1.925,62,2.715,74,1.039,86,1.381,100,1.327,103,1.936,104,3.306,105,2.643,107,1.423,110,2.897,111,1.543,112,2.773,114,4.438,115,4.438,117,2.074,120,2.897,121,3.139,124,1.233,125,2.643,128,2.864,132,3.202,133,1.498,208,2.1,216,3.787,217,3.787,230,2.773,232,2.946,235,2.53,236,3.653,237,3.583,238,4.219,239,3.009,240,4.219,241,3.009,242,3.009,243,3.009,244,4.219,245,2.773,246,3.009,247,3.009,248,2.214]],["title/controllers/ArticlesClientsController.html",[0,0.889,249,2.153]],["body/controllers/ArticlesClientsController.html",[0,0.728,2,0.728,3,0.189,4,0.162,5,0.162,7,0.38,8,1.055,10,1.673,11,0.029,12,0.901,14,1.444,16,0.275,17,0.345,20,0.189,21,0.189,24,1.444,26,0.016,27,0.016,51,0.536,52,0.536,53,0.536,61,1.666,62,2.545,74,0.969,92,0.784,93,0.784,111,1.135,117,2.248,124,1.486,136,1.455,137,2.001,141,1.783,144,1.673,145,1.444,146,1.673,147,2.479,148,3.162,151,1.455,152,2.108,158,1.594,160,3.76,162,2.979,232,2.761,237,1.972,249,2.554,250,2.254,251,4.181,252,3.266,253,3.885,254,3.266,255,3.266,256,3.266,257,2.254,258,2.681,259,2.681,260,2.681,261,2.254,262,2.681,263,2.254,264,2.681,265,2.681,266,2.254,267,2.681,268,2.681,269,2.254,270,2.681,271,2.681,272,3.841,273,2.254,274,1.762,275,2.479,276,1.762,277,2.254,278,2.681,279,2.681,280,2.681,281,2.681,282,2.681,283,2.681,284,2.681,285,2.681,286,2.681,287,2.681,288,2.681,289,2.681,290,2.681,291,2.681,292,2.681,293,2.681]],["title/modules/ArticlesClientsModule.html",[28,0.889,41,1.948]],["body/modules/ArticlesClientsModule.html",[2,1.335,3,0.267,4,0.227,5,0.227,11,0.029,16,0.443,17,0.485,20,0.267,21,0.267,26,0.021,27,0.021,28,1.484,30,1.483,31,1.483,32,1.732,33,1.732,34,1.483,35,2.509,36,2.509,41,3.731,46,2.256,47,1.732,48,1.601,50,1.879,51,0.754,52,0.754,53,0.754,56,1.879,57,1.024,61,2.19,62,1.732,111,1.437,133,1.879,208,1.879,232,1.879,233,1.879,248,2.776,249,3.594,275,3.568,276,2.48,294,3.173,295,3.173,296,3.173,297,3.774,298,3.173,299,3.774]],["title/injectables/ArticlesClientsService.html",[94,0.655,275,1.777]],["body/injectables/ArticlesClientsService.html",[3,0.146,4,0.125,5,0.125,7,0.293,8,0.868,11,0.029,12,0.852,14,1.291,16,0.355,17,0.266,20,0.146,21,0.146,24,1.291,26,0.014,27,0.014,57,0.561,59,0.561,61,1.834,62,2.406,74,0.918,92,0.934,93,1.142,94,0.639,95,0.812,104,3.307,105,1.121,106,2.101,107,1.533,108,1.229,111,0.604,117,1.976,124,1.442,133,1.029,137,1.911,141,1.467,144,1.582,145,1.365,146,1.582,160,3.655,173,2.607,180,2.41,183,1.029,185,1.52,186,2.829,187,2.406,190,2.101,191,2.616,206,3.286,208,1.591,232,2.611,233,1.029,236,3.447,237,2.875,245,2.569,248,1.52,251,3.993,252,2.687,254,2.687,255,2.687,256,2.687,257,2.687,263,2.687,266,2.687,269,2.687,272,4.228,275,1.734,300,1.737,301,3.909,302,2.066,303,3.286,304,3.286,305,2.066,306,3.196,307,2.066,308,2.066,309,2.066,310,2.066,311,2.066,312,2.066,313,2.066,314,2.066,315,1.737,316,3.909,317,2.066,318,2.066,319,2.687,320,3.196,321,2.066,322,2.066,323,2.066,324,2.066,325,2.066,326,2.066,327,2.066,328,2.687,329,2.066,330,3.196,331,2.066,332,2.066,333,3.196,334,2.066,335,2.066,336,2.066,337,2.066,338,2.066]],["title/controllers/ArticlesController.html",[0,0.889,339,2.153]],["body/controllers/ArticlesController.html",[0,0.794,2,0.794,3,0.207,4,0.176,5,0.176,7,0.414,8,1.122,10,1.73,11,0.029,12,0.931,14,1.493,15,1.037,16,0.339,17,0.376,20,0.207,21,0.207,24,1.493,26,0.018,27,0.018,51,0.584,52,0.584,53,0.584,61,2.185,74,0.883,92,0.855,93,0.855,107,1.523,124,1.334,136,1.587,137,2.027,144,1.64,145,1.55,146,1.64,147,2.243,151,1.587,152,2.243,158,1.739,162,2.852,180,2.621,236,3.753,261,2.459,273,2.459,274,1.922,277,2.459,339,2.718,340,2.459,341,3.476,342,3.476,343,3.835,344,3.476,345,3.476,346,2.459,347,2.925,348,2.459,349,2.925,350,2.925,351,2.459,352,2.925,353,2.459,354,2.459,355,2.925,356,2.459,357,2.925,358,2.925,359,2.925,360,2.925,361,2.602,362,2.459,363,2.152,364,2.925,365,2.925,366,2.925,367,2.459,368,2.925,369,2.925,370,2.925,371,2.925,372,2.925,373,2.925,374,2.925,375,2.925,376,2.925]],["title/modules/ArticlesModule.html",[28,0.889,42,1.948]],["body/modules/ArticlesModule.html",[2,1.377,3,0.28,4,0.239,5,0.239,11,0.029,16,0.431,17,0.51,20,0.28,21,0.28,26,0.022,27,0.022,28,1.519,30,1.557,31,1.557,32,1.818,33,1.818,34,1.557,35,2.568,36,2.568,42,3.773,46,2.328,47,1.818,48,1.681,50,1.973,51,0.792,52,0.792,53,0.792,56,1.973,57,1.075,61,1.444,339,3.679,361,3.593,362,3.331,363,2.915,377,3.331,378,3.331,379,3.331,380,3.962,381,3.962,382,3.962]],["title/injectables/ArticlesService.html",[94,0.655,361,1.777]],["body/injectables/ArticlesService.html",[3,0.19,4,0.162,5,0.162,7,0.38,8,1.056,11,0.029,12,0.969,14,1.506,15,0.989,16,0.354,17,0.345,20,0.19,21,0.19,24,1.445,26,0.017,27,0.017,57,0.729,59,0.729,61,2.086,74,0.94,92,1.137,93,0.785,94,0.777,95,1.056,107,1.337,124,1.395,137,2.034,144,1.745,145,1.647,146,1.745,173,2.301,180,2.634,183,1.338,187,2.546,236,3.498,251,4.251,303,3.271,315,2.258,341,3.271,342,3.271,343,3.689,344,3.271,345,3.271,346,3.271,348,3.271,353,3.271,356,3.271,361,2.111,363,1.976,383,2.258,384,3.891,385,2.686,386,2.686,387,2.686,388,2.686,389,2.686,390,2.686,391,3.891,392,2.686,393,4.574,394,2.686,395,2.686,396,2.686,397,3.891,398,2.686,399,3.271,400,2.686,401,2.686,402,2.686,403,2.686]],["title/entities/Auth.html",[100,1.03,404,1.03]],["body/entities/Auth.html",[3,0.208,4,0.178,5,0.178,7,0.418,10,1.921,11,0.029,12,1.035,15,1.238,16,0.341,20,0.208,21,0.208,26,0.018,27,0.018,51,0.59,52,0.59,53,0.59,59,0.801,69,1.469,74,1.06,80,2.866,82,3.167,86,1.354,100,1.309,103,1.909,104,2.866,105,2.614,107,1.408,110,2.866,111,1.673,117,2.056,120,2.474,121,3.112,124,1.222,125,2.614,128,3.314,133,1.469,213,3.06,216,3.44,217,3.763,230,2.734,234,3.545,245,2.734,404,1.309,405,2.48,406,2.614,407,4.819,408,4.819,409,4.16,410,2.95,411,2.95,412,2.95,413,2.851,414,4.16,415,2.95,416,2.95,417,2.95,418,4.16,419,2.95,420,2.95,421,2.95,422,1.601,423,1.939]],["title/controllers/AuthController.html",[0,0.889,424,2.153]],["body/controllers/AuthController.html",[0,0.659,2,0.659,3,0.171,4,0.146,5,0.146,7,0.344,8,0.98,10,1.502,11,0.029,12,0.809,14,1.296,15,1.104,16,0.361,17,0.312,20,0.171,21,0.171,24,1.296,26,0.015,27,0.015,51,0.485,52,0.485,53,0.485,72,3.517,74,0.964,80,2.84,82,2.373,92,0.709,93,1.055,107,1.055,136,1.316,137,1.914,141,2.191,144,1.502,145,1.296,146,1.502,147,2.77,148,2.84,151,1.316,152,1.316,158,1.443,162,1.443,186,2.542,187,1.113,404,0.763,406,1.316,424,2.373,425,2.039,426,3.61,427,3.035,428,3.61,429,3.035,430,2.426,431,6.085,432,2.426,433,2.426,434,4.292,435,2.426,436,5.542,437,2.426,438,2.426,439,2.426,440,2.426,441,2.426,442,2.426,443,2.426,444,2.426,445,2.426,446,2.339,447,2.039,448,2.039,449,4.312,450,1.785,451,1.595,452,1.443,453,1.443,454,2.426,455,2.426,456,2.426,457,2.426,458,2.426,459,3.61,460,2.039,461,2.426,462,2.426,463,2.426,464,2.656,465,2.426,466,3.035,467,2.426,468,2.426,469,3.61,470,3.61,471,3.035,472,3.61,473,3.61,474,3.61,475,3.61,476,2.426,477,3.61,478,3.61,479,3.61,480,3.61,481,3.61,482,2.426,483,2.426,484,3.61,485,2.426,486,3.61,487,2.426,488,2.426,489,3.61,490,2.426,491,3.61,492,2.426,493,2.426,494,2.426]],["title/modules/AuthModule.html",[28,0.889,43,1.948]],["body/modules/AuthModule.html",[2,1.304,3,0.257,4,0.219,5,0.219,11,0.029,16,0.44,17,0.468,20,0.257,21,0.257,26,0.02,27,0.02,28,1.459,30,1.431,31,1.431,32,1.671,33,1.671,34,1.431,35,2.466,36,2.466,43,3.798,46,2.204,47,1.671,48,1.545,50,1.813,51,0.728,52,0.728,53,0.728,56,1.813,57,0.989,404,1.145,424,3.532,446,3.549,447,3.061,450,2.679,452,2.166,453,2.166,471,3.061,495,3.061,496,3.061,497,3.061,498,3.627,499,3.642,500,3.642,501,3.061,502,4.803,503,3.642,504,3.642,505,3.642,506,3.642,507,3.061,508,3.642,509,3.642]],["title/injectables/AuthService.html",[94,0.655,446,1.777]],["body/injectables/AuthService.html",[3,0.224,4,0.191,5,0.191,7,0.448,8,1.186,11,0.029,12,0.847,14,1.186,15,1.409,16,0.4,17,0.407,20,0.224,21,0.224,24,1.186,26,0.019,27,0.019,57,0.859,59,0.859,74,0.847,80,3.208,82,4.018,92,1.277,93,0.925,94,0.873,95,1.243,137,1.841,144,1.574,145,1.358,146,1.574,173,2.476,180,2.288,183,1.576,186,2.686,187,2.296,190,2.871,191,2.598,319,2.66,404,0.995,406,2.927,427,3.672,429,3.672,446,2.37,464,3.214,501,2.66,510,2.66,511,2.66,512,3.164,513,3.214,514,4.369,515,3.164,516,4.369,517,3.164,518,3.672,519,2.08,520,4.369,521,3.164,522,3.164,523,3.164,524,3.164,525,3.164,526,2.66,527,2.66,528,3.164,529,3.164,530,3.164,531,3.164,532,3.164,533,3.164]],["title/entities/Clients.html",[100,1.03,111,0.957]],["body/entities/Clients.html",[3,0.163,4,0.139,5,0.139,7,0.327,10,1.915,11,0.029,12,1.031,15,1.329,16,0.329,20,0.163,21,0.163,26,0.015,27,0.015,51,0.461,52,0.461,53,0.461,59,0.626,62,1.058,72,2.284,74,1.092,86,1.058,100,1.093,101,2.713,103,1.595,105,2.269,107,1.222,110,2.487,111,1.016,112,1.516,117,1.83,120,3.413,121,2.769,122,2.922,124,0.812,125,2.269,128,3.173,132,2.284,145,1.356,197,2.922,208,2.614,213,2.557,216,3.451,217,3.451,219,4.715,220,4.715,221,4.414,230,2.284,232,1.148,233,1.148,234,3.077,404,1.652,406,2.269,534,1.939,535,3.077,536,3.516,537,4.183,538,3.077,539,3.077,540,3.077,541,3.077,542,4.656,543,2.306,544,3.476,545,2.306,546,3.476,547,2.306,548,3.476,549,2.306,550,3.476,551,2.306,552,2.306,553,2.306,554,2.306,555,2.306,556,2.306,557,3.476,558,2.306,559,4.656,560,2.306,561,4.183,562,2.306,563,2.306,564,2.306,565,1.148,566,2.306,567,2.306,568,2.306,569,2.306]],["title/controllers/ClientsController.html",[0,0.889,570,2.153]],["body/controllers/ClientsController.html",[0,0.624,2,0.624,3,0.162,4,0.139,5,0.139,7,0.325,8,0.941,10,1.712,11,0.029,12,0.922,14,1.478,15,1.394,16,0.295,17,0.296,20,0.162,21,0.162,24,1.521,26,0.015,27,0.015,51,0.459,52,0.459,53,0.459,74,0.971,92,0.672,93,0.672,111,1.013,124,1.459,136,1.247,137,2.019,141,1.591,144,1.712,145,1.633,146,1.712,147,2.265,148,2.764,151,1.247,152,1.247,158,1.367,162,3.119,180,2.224,233,1.144,274,1.511,276,1.511,343,2.55,351,1.932,354,1.932,367,1.932,406,1.247,460,1.932,535,1.691,538,1.691,539,1.691,540,1.691,541,4.218,570,2.279,571,1.932,572,2.914,573,2.914,574,2.914,575,2.914,576,3.467,577,3.467,578,2.298,579,2.298,580,2.298,581,5.25,582,2.298,583,2.298,584,2.298,585,2.298,586,2.298,587,1.932,588,2.298,589,1.932,590,2.298,591,2.298,592,2.298,593,2.298,594,2.298,595,2.279,596,2.298,597,2.298,598,2.298,599,2.265,600,2.298,601,2.298,602,3.467,603,2.298,604,2.298,605,2.298,606,2.298,607,2.298,608,2.298,609,2.298,610,2.298,611,2.298,612,2.298,613,2.298,614,2.298,615,2.298,616,2.298,617,2.298,618,4.174,619,2.298,620,2.298,621,2.298,622,2.298,623,2.298,624,2.298,625,2.298,626,2.298,627,2.298,628,2.298,629,2.298]],["title/modules/ClientsModule.html",[28,0.889,44,1.948]],["body/modules/ClientsModule.html",[2,1.362,3,0.275,4,0.235,5,0.235,11,0.029,16,0.439,17,0.501,20,0.275,21,0.275,26,0.021,27,0.021,28,1.507,30,1.53,31,1.53,32,1.787,33,1.787,34,1.53,35,2.547,36,2.547,44,3.758,46,2.302,47,1.787,48,1.651,50,1.939,51,0.778,52,0.778,53,0.778,56,1.939,57,1.057,111,1.138,233,1.939,276,2.559,298,3.273,404,1.578,565,1.939,570,3.648,599,3.584,630,3.273,631,3.273,632,3.273,633,3.894,634,3.894]],["title/injectables/ClientsService.html",[94,0.655,599,1.777]],["body/injectables/ClientsService.html",[3,0.142,4,0.121,5,0.121,7,0.284,8,0.848,11,0.029,12,0.908,14,1.408,15,1.425,16,0.331,17,0.258,20,0.142,21,0.142,24,1.408,26,0.013,27,0.013,57,0.544,59,0.544,74,0.908,92,0.912,93,0.912,94,0.624,95,0.788,107,1.516,111,0.586,124,1.41,137,1.981,144,1.687,145,1.622,146,1.687,173,2.38,180,2.535,183,0.998,185,1.475,186,2.155,187,2.529,233,0.998,251,4.139,304,2.625,328,3.943,399,3.224,404,1.206,406,2.348,519,1.318,535,3.184,536,3.943,538,3.184,539,3.184,540,3.184,541,4.442,565,0.998,572,2.625,573,2.625,574,2.625,575,2.625,581,4.967,587,2.625,589,2.625,595,2.52,599,1.694,635,1.686,636,3.122,637,3.122,638,3.122,639,2.005,640,3.835,641,2.005,642,3.122,643,2.005,644,3.122,645,2.005,646,2.005,647,2.005,648,3.122,649,2.005,650,3.122,651,2.005,652,3.122,653,2.005,654,4.328,655,3.122,656,2.005,657,2.005,658,2.005,659,2.005,660,2.005,661,3.122,662,2.005,663,2.005,664,2.005,665,2.005,666,2.005,667,2.005,668,1.686]],["title/entities/HistoriqueConnexion.html",[100,1.03,413,1.631]],["body/entities/HistoriqueConnexion.html",[3,0.228,4,0.194,5,0.194,7,0.457,10,1.932,11,0.029,12,1.04,15,1.363,16,0.313,20,0.228,21,0.228,26,0.019,27,0.019,51,0.644,52,0.644,53,0.644,59,0.875,69,3.102,74,1.04,86,1.48,100,1.392,103,2.031,107,1.477,112,2.12,117,2.239,124,1.034,125,2.742,128,3.506,132,2.909,404,1.96,413,2.204,422,3.38,565,1.606,669,2.711,670,3.321,671,3.717,672,3.717,673,3.717,674,3.717,675,4.426,676,3.225,677,3.225,678,3.225,679,3.225,680,3.225,681,3.225,682,3.225,683,3.225]],["title/controllers/HistoriqueConnexionController.html",[0,0.889,684,2.153]],["body/controllers/HistoriqueConnexionController.html",[0,0.821,2,0.821,3,0.214,4,0.182,5,0.182,7,0.428,8,1.149,10,1.536,11,0.029,12,0.827,14,1.325,15,1.307,16,0.345,17,0.389,20,0.214,21,0.214,24,1.325,26,0.018,27,0.018,51,0.604,52,0.604,53,0.604,68,3.209,69,2.634,74,1.003,92,0.883,93,0.883,117,1.663,124,1.3,136,1.64,137,1.932,141,2.427,144,1.536,145,1.325,146,1.536,147,3.021,151,1.64,152,2.296,180,2.447,274,1.987,413,1.505,422,2.87,423,1.987,595,2.781,670,1.987,671,2.224,672,2.224,673,2.224,674,2.224,684,2.781,685,2.541,686,4.232,687,3.557,688,4.232,689,4.232,690,3.023,691,3.023,692,3.023,693,3.023,694,3.023,695,3.023,696,3.023,697,4.851,698,3.023,699,3.023,700,3.023,701,2.649,702,2.541,703,3.023,704,3.023,705,3.023,706,3.023,707,3.023,708,3.023,709,3.023,710,3.023,711,3.023,712,3.023,713,3.023,714,4.232,715,3.023,716,3.023,717,3.023,718,3.023,719,3.023,720,3.023]],["title/modules/HistoriqueConnexionModule.html",[28,0.889,45,1.948]],["body/modules/HistoriqueConnexionModule.html",[2,1.354,3,0.273,4,0.233,5,0.233,11,0.029,16,0.438,17,0.496,20,0.273,21,0.273,26,0.021,27,0.021,28,1.501,30,1.517,31,1.517,32,1.771,33,1.771,34,1.517,35,2.537,36,2.537,45,3.751,46,2.289,47,1.771,48,1.637,50,1.922,51,0.771,52,0.771,53,0.771,56,1.922,57,1.048,68,3.634,69,1.922,404,1.569,413,1.922,422,2.094,423,2.537,565,1.922,684,3.634,701,3.579,702,3.245,721,3.245,722,3.245,723,3.245,724,3.86,725,3.86,726,3.86]],["title/injectables/HistoriqueConnexionService.html",[94,0.655,701,1.777]],["body/injectables/HistoriqueConnexionService.html",[3,0.196,4,0.167,5,0.167,7,0.392,8,1.079,11,0.029,12,0.861,14,1.263,15,1.404,16,0.381,17,0.356,20,0.196,21,0.196,24,1.263,26,0.017,27,0.017,57,0.752,59,0.752,68,1.82,69,2.682,74,0.861,92,1.162,93,1.162,94,0.795,95,1.088,107,1.162,117,2.116,124,1.406,137,1.893,144,1.6,145,1.38,146,1.6,173,2.65,180,2.378,183,1.379,186,1.98,187,1.271,404,1.6,413,1.379,422,2.922,423,1.82,513,3.423,519,1.82,565,1.379,595,3.058,668,2.328,670,3.343,671,3.741,672,3.741,673,3.741,674,3.741,687,3.343,697,5.197,701,2.157,727,2.328,728,3.977,729,3.977,730,2.769,731,2.769,732,3.977,733,3.977,734,2.769,735,3.977,736,2.769,737,3.977,738,2.769,739,2.769,740,2.769,741,2.769,742,2.769,743,2.769,744,2.769,745,2.769,746,2.769,747,2.769]],["title/injectables/JwtAuthGuard.html",[94,0.655,451,2.153]],["body/injectables/JwtAuthGuard.html",[3,0.339,4,0.289,5,0.289,11,0.028,16,0.403,17,0.616,20,0.339,21,0.339,26,0.024,27,0.024,94,1.14,95,1.882,451,3.75,452,2.849,453,2.849,748,4.027,749,4.796,750,5.705,751,4.79,752,3.524]],["title/injectables/JwtStrategy.html",[94,0.655,498,1.948]],["body/injectables/JwtStrategy.html",[3,0.237,4,0.202,5,0.202,7,0.475,8,1.234,11,0.029,12,0.77,14,0.91,15,0.725,16,0.421,17,0.431,20,0.237,21,0.237,24,1.399,26,0.019,27,0.019,57,0.91,59,0.91,74,0.936,80,2.703,92,1.328,93,0.98,94,0.908,95,1.317,107,0.98,124,0.783,137,1.622,141,2.085,144,1.429,145,1.234,146,1.429,148,1.994,173,2.536,183,1.669,186,1.669,187,1.538,190,2.204,191,1.994,203,2.818,404,1.055,434,2.818,452,3.066,453,3.066,464,3.343,466,2.818,498,2.703,507,2.818,511,2.818,513,3.343,519,2.204,526,2.818,527,2.818,565,1.669,749,3.821,752,2.467,753,2.818,754,4.545,755,4.545,756,3.353,757,4.545,758,3.353,759,4.545,760,3.353,761,3.353,762,3.353,763,2.818,764,2.818,765,3.353,766,3.353,767,3.353,768,3.353,769,3.353,770,3.353,771,3.353,772,3.353,773,3.353,774,3.353]],["title/coverage.html",[775,3.291]],["body/coverage.html",[0,1.638,1,2.125,5,0.195,6,2.717,11,0.029,18,1.754,26,0.019,27,0.019,34,1.27,61,1.178,62,2.322,69,2.519,74,0.547,94,1.246,96,2.717,100,1.853,101,1.609,102,2.717,111,0.945,134,2.125,135,2.717,153,1.754,171,2.717,191,1.922,207,2.717,208,1.609,232,2.519,235,2.717,245,4.409,249,2.125,250,2.717,275,1.754,300,2.717,339,2.125,340,2.717,361,1.754,383,2.717,404,1.017,405,2.717,413,1.609,422,2.745,424,2.125,425,2.717,446,1.754,451,2.125,452,2.636,453,2.636,498,1.922,510,2.717,534,2.717,570,2.125,571,2.717,599,1.754,635,2.717,669,2.717,684,2.125,685,2.717,701,1.754,727,2.717,748,2.717,753,2.717,775,2.378,776,2.717,777,3.232,778,3.232,779,4.433,780,4.433,781,6.144,782,5.059,783,4.433,784,3.232,785,4.433,786,4.433,787,3.232,788,2.717,789,3.232,790,3.232,791,3.232]],["title/dependencies.html",[31,1.548,792,2.299]],["body/dependencies.html",[11,0.029,17,0.559,26,0.023,27,0.023,31,1.707,57,1.179,59,1.179,67,3.652,448,3.652,450,3.196,518,3.652,752,3.196,763,4.519,764,3.652,793,4.344,794,4.344,795,4.344,796,4.344,797,4.344,798,5.376,799,5.376,800,4.344,801,4.344,802,4.344,803,4.344,804,4.344,805,4.344,806,4.344,807,4.344,808,4.344,809,4.344,810,4.344,811,4.344,812,4.344,813,4.344,814,4.344,815,4.344,816,4.344,817,4.344]],["title/miscellaneous/functions.html",[818,2.299,819,3.313]],["body/miscellaneous/functions.html",[7,0.727,11,0.025,26,0.025,27,0.025,34,2.465,788,4.318,818,4.318,819,4.318,820,5.136]],["title/index.html",[7,0.387,821,2.734,822,2.734]],["body/index.html",[4,0.165,11,0.027,26,0.017,27,0.017,48,2.367,108,1.623,173,1.253,209,2.008,775,2.008,776,3.309,823,2.73,824,2.73,825,4.616,826,3.936,827,2.73,828,2.73,829,2.73,830,2.73,831,3.936,832,4.616,833,2.73,834,2.73,835,5.052,836,2.73,837,5.052,838,5.887,839,2.73,840,5.751,841,2.73,842,2.73,843,3.936,844,2.73,845,3.936,846,2.73,847,4.616,848,2.73,849,3.936,850,2.73,851,2.73,852,2.73,853,2.73,854,2.73,855,5.052,856,5.887,857,5.58,858,2.73,859,3.936,860,2.73,861,2.73,862,2.73,863,2.73,864,2.73,865,5.58,866,3.936,867,5.052,868,2.73,869,3.936,870,2.73,871,2.73,872,3.936,873,5.58,874,5.052,875,2.73,876,3.936,877,2.73,878,2.73,879,2.73,880,2.73,881,5.052,882,2.73,883,2.73,884,2.73,885,2.73,886,3.936,887,2.73,888,2.73,889,2.73,890,2.73,891,2.73,892,3.936,893,2.73,894,2.73,895,2.73,896,3.936,897,2.73,898,2.73,899,4.247,900,3.936,901,2.73,902,2.73,903,2.73,904,2.73,905,2.73,906,2.73,907,2.73,908,2.73,909,3.936,910,2.73,911,2.73,912,2.73,913,2.73,914,4.616,915,2.73,916,2.73,917,2.73,918,2.73,919,2.73,920,2.73,921,3.936,922,2.73,923,2.73,924,2.73,925,2.73,926,2.73,927,3.936,928,2.73,929,2.73,930,2.73,931,3.936,932,3.936,933,2.73,934,2.73,935,2.73,936,2.73,937,2.73,938,2.73,939,2.73,940,2.73,941,2.73,942,2.73,943,2.73,944,2.295,945,2.73,946,2.73,947,2.73,948,2.73,949,2.73,950,2.73,951,2.295]],["title/modules.html",[30,1.758]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,3.051,30,1.824,40,2.761,41,2.761,42,2.761,43,2.761,44,2.761,45,2.761,670,4.315,899,5.519,952,6.565,953,6.565]],["title/overview.html",[954,3.761]],["body/overview.html",[2,0.877,11,0.028,18,2.745,26,0.019,27,0.019,28,0.877,29,4.316,30,1.27,31,1.27,32,1.483,33,1.483,34,1.27,35,1.483,36,1.483,37,2.717,38,2.717,39,2.717,40,3.504,41,3.504,42,3.504,43,3.654,44,3.504,45,3.504,46,2.034,47,1.483,48,1.371,86,1.483,95,1.27,153,3.273,164,2.717,165,2.717,166,2.717,275,3.273,294,2.717,295,2.717,296,2.717,361,3.273,377,2.717,378,2.717,379,2.717,446,3.273,495,2.717,496,2.717,497,2.717,498,3.009,599,3.273,630,2.717,631,2.717,632,2.717,701,3.273,721,2.717,722,2.717,723,2.717,954,2.717,955,4.433,956,3.232,957,3.232]],["title/properties.html",[103,1.808,792,2.299]],["body/properties.html",[11,0.028,26,0.025,27,0.025,103,2.33,209,3.736,944,4.269,951,4.269,958,5.078,959,5.078,960,5.078]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":245,"title":{},"body":{"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{},"coverage.html":{}}}],["0.0.1",{"_index":959,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["0.3.23",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["1.1.26",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["10.0.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["10.4.17",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":224,"title":{},"body":{"entities/Articles.html":{}}}],["1000",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{}}}],["11.0.0",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["1h",{"_index":509,"title":{},"body":{"modules/AuthModule.html":{}}}],["20",{"_index":557,"title":{},"body":{"entities/Clients.html":{}}}],["255",{"_index":221,"title":{},"body":{"entities/Articles.html":{},"entities/Clients.html":{}}}],["3.14.1",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{}}}],["30m",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{}}}],["30min",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.1",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["59",{"_index":333,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["6",{"_index":956,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["7",{"_index":955,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":957,"title":{},"body":{"overview.html":{}}}],["999",{"_index":334,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["__dirname",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["address",{"_index":535,"title":{},"body":{"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["allowing",{"_index":887,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":937,"title":{},"body":{"index.html":{}}}],["andwhere('historiqueconnexion.auth.id",{"_index":747,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":857,"title":{},"body":{"index.html":{}}}],["applications",{"_index":831,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointment",{"_index":197,"title":{},"body":{"injectables/AppointmentsService.html":{},"entities/Clients.html":{}}}],["appointment.client",{"_index":544,"title":{},"body":{"entities/Clients.html":{}}}],["appointmentrepository",{"_index":176,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["appointments",{"_index":101,"title":{"entities/Appointments.html":{}},"body":{"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Clients.html":{},"coverage.html":{}}}],["appointments.controller",{"_index":168,"title":{},"body":{"modules/AppointmentsModule.html":{}}}],["appointments.entity",{"_index":169,"title":{},"body":{"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{}}}],["appointments.service",{"_index":154,"title":{},"body":{"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{}}}],["appointments/appointments.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["appointmentscontroller",{"_index":134,"title":{"controllers/AppointmentsController.html":{}},"body":{"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"coverage.html":{}}}],["appointmentservice",{"_index":156,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["appointmentsmodule",{"_index":40,"title":{"modules/AppointmentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules.html":{},"overview.html":{}}}],["appointmentsservice",{"_index":153,"title":{"injectables/AppointmentsService.html":{}},"body":{"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["article",{"_index":236,"title":{},"body":{"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["article.articlesclients",{"_index":238,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["articleid",{"_index":272,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["articles",{"_index":61,"title":{"entities/Articles.html":{}},"body":{"modules/AppModule.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"coverage.html":{}}}],["articles.controller",{"_index":381,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["articles.entity",{"_index":363,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{}}}],["articles.service",{"_index":362,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{}}}],["articles/articles.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["articlesclients",{"_index":208,"title":{"entities/ArticlesClients.html":{}},"body":{"entities/Articles.html":{},"entities/ArticlesClients.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Clients.html":{},"coverage.html":{}}}],["articlesclients.article",{"_index":214,"title":{},"body":{"entities/Articles.html":{}}}],["articlesclients.client",{"_index":548,"title":{},"body":{"entities/Clients.html":{}}}],["articlesclientscontroller",{"_index":249,"title":{"controllers/ArticlesClientsController.html":{}},"body":{"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"coverage.html":{}}}],["articlesclientsmodule",{"_index":41,"title":{"modules/ArticlesClientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesClientsModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesclientsrepository",{"_index":306,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["articlesclientsservice",{"_index":275,"title":{"injectables/ArticlesClientsService.html":{}},"body":{"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"coverage.html":{},"overview.html":{}}}],["articlescontroller",{"_index":339,"title":{"controllers/ArticlesController.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"coverage.html":{}}}],["articlesmodule",{"_index":42,"title":{"modules/ArticlesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesrepository",{"_index":303,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{}}}],["articlesservice",{"_index":361,"title":{"injectables/ArticlesService.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":137,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["auth",{"_index":404,"title":{"entities/Auth.html":{}},"body":{"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["auth.client",{"_index":546,"title":{},"body":{"entities/Clients.html":{}}}],["auth.controller",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.entity",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.guard",{"_index":454,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":748,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.historiqueconnexions",{"_index":675,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["auth.service",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.strategy",{"_index":503,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.strategy.ts",{"_index":753,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["auth.strategy.ts:10",{"_index":756,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth.strategy.ts:29",{"_index":758,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["authcontroller",{"_index":424,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":751,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":750,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authid",{"_index":697,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":944,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrepository",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["auths",{"_index":536,"title":{},"body":{"entities/Clients.html":{},"injectables/ClientsService.html":{}}}],["authservice",{"_index":446,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsid",{"_index":581,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["authsrepository",{"_index":640,"title":{},"body":{"injectables/ClientsService.html":{}}}],["autoloadentities",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["avec",{"_index":193,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["await",{"_index":187,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["aws",{"_index":876,"title":{},"body":{"index.html":{}}}],["backers",{"_index":938,"title":{},"body":{"index.html":{}}}],["based",{"_index":871,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["between",{"_index":313,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["between(start",{"_index":336,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["board",{"_index":930,"title":{},"body":{"index.html":{}}}],["body",{"_index":147,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["body.address",{"_index":609,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.articles",{"_index":286,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["body.authid",{"_index":712,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["body.authsid",{"_index":612,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.browser",{"_index":711,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["body.comments",{"_index":610,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.company",{"_index":608,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.device",{"_index":709,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["body.email",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ClientsController.html":{}}}],["body.ip_address",{"_index":707,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["body.os",{"_index":710,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["body.password",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.phone",{"_index":607,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.status",{"_index":611,"title":{},"body":{"controllers/ClientsController.html":{}}}],["body.useragent",{"_index":708,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":953,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":670,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"modules.html":{}}}],["building",{"_index":826,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":115,"title":{},"body":{"entities/Appointments.html":{},"entities/ArticlesClients.html":{}}}],["channel",{"_index":902,"title":{},"body":{"index.html":{}}}],["check",{"_index":865,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["clicks",{"_index":886,"title":{},"body":{"index.html":{}}}],["client",{"_index":104,"title":{},"body":{"entities/Appointments.html":{},"injectables/AppointmentsService.html":{},"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{}}}],["client.appointments",{"_index":113,"title":{},"body":{"entities/Appointments.html":{}}}],["client.clientarticles",{"_index":240,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["client_comments",{"_index":550,"title":{},"body":{"entities/Clients.html":{}}}],["clientarticles",{"_index":537,"title":{},"body":{"entities/Clients.html":{}}}],["clientid",{"_index":160,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["clientrepository",{"_index":174,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["clients",{"_index":111,"title":{"entities/Clients.html":{}},"body":{"entities/Appointments.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"coverage.html":{}}}],["clients.auths",{"_index":409,"title":{},"body":{"entities/Auth.html":{}}}],["clients.auths.id",{"_index":667,"title":{},"body":{"injectables/ClientsService.html":{}}}],["clients.controller",{"_index":298,"title":{},"body":{"modules/ArticlesClientsModule.html":{},"modules/ClientsModule.html":{}}}],["clients.controller.ts",{"_index":250,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"coverage.html":{}}}],["clients.controller.ts:13",{"_index":265,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["clients.controller.ts:19",{"_index":271,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["clients.controller.ts:25",{"_index":262,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["clients.controller.ts:31",{"_index":259,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["clients.controller.ts:37",{"_index":268,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["clients.entity",{"_index":233,"title":{},"body":{"entities/Articles.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{}}}],["clients.entity.ts",{"_index":235,"title":{},"body":{"entities/ArticlesClients.html":{},"coverage.html":{}}}],["clients.entity.ts:12",{"_index":241,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.entity.ts:15",{"_index":239,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.entity.ts:18",{"_index":246,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.entity.ts:21",{"_index":242,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.entity.ts:24",{"_index":247,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.entity.ts:9",{"_index":243,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["clients.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["clients.module.ts",{"_index":297,"title":{},"body":{"modules/ArticlesClientsModule.html":{}}}],["clients.service",{"_index":276,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{}}}],["clients.service.ts",{"_index":300,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"coverage.html":{}}}],["clients.service.ts:10",{"_index":305,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.service.ts:22",{"_index":310,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.service.ts:29",{"_index":312,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.service.ts:36",{"_index":309,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.service.ts:64",{"_index":307,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.service.ts:71",{"_index":311,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["clients.status",{"_index":663,"title":{},"body":{"injectables/ClientsService.html":{}}}],["clients/articles",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Clients.html":{},"coverage.html":{}}}],["clients/clients.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["clientscontroller",{"_index":570,"title":{"controllers/ClientsController.html":{}},"body":{"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"coverage.html":{}}}],["clientsmodule",{"_index":44,"title":{"modules/ClientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules.html":{},"overview.html":{}}}],["clientsrepository",{"_index":304,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"injectables/ClientsService.html":{}}}],["clientsservice",{"_index":599,"title":{"injectables/ClientsService.html":{}},"body":{"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"coverage.html":{},"overview.html":{}}}],["cloud",{"_index":870,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appointmentsmodule",{"_index":164,"title":{},"body":{"modules/AppointmentsModule.html":{},"overview.html":{}}}],["cluster_appointmentsmodule_exports",{"_index":165,"title":{},"body":{"modules/AppointmentsModule.html":{},"overview.html":{}}}],["cluster_appointmentsmodule_providers",{"_index":166,"title":{},"body":{"modules/AppointmentsModule.html":{},"overview.html":{}}}],["cluster_articlesclientsmodule",{"_index":294,"title":{},"body":{"modules/ArticlesClientsModule.html":{},"overview.html":{}}}],["cluster_articlesclientsmodule_exports",{"_index":296,"title":{},"body":{"modules/ArticlesClientsModule.html":{},"overview.html":{}}}],["cluster_articlesclientsmodule_providers",{"_index":295,"title":{},"body":{"modules/ArticlesClientsModule.html":{},"overview.html":{}}}],["cluster_articlesmodule",{"_index":377,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_articlesmodule_exports",{"_index":378,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_articlesmodule_providers",{"_index":379,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":497,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_clientsmodule",{"_index":630,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_clientsmodule_exports",{"_index":631,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_clientsmodule_providers",{"_index":632,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_historiqueconnexionmodule",{"_index":721,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["cluster_historiqueconnexionmodule_exports",{"_index":722,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["cluster_historiqueconnexionmodule_providers",{"_index":723,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["co",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["column",{"_index":128,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{}}}],["column({default",{"_index":418,"title":{},"body":{"entities/Auth.html":{}}}],["column({type",{"_index":120,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["come",{"_index":893,"title":{},"body":{"index.html":{}}}],["comments",{"_index":538,"title":{},"body":{"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["company",{"_index":539,"title":{},"body":{"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["compodoc/compodoc",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot({isglobal",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["connexion",{"_index":686,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["connexion.controller",{"_index":725,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{}}}],["connexion.controller.ts",{"_index":685,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{},"coverage.html":{}}}],["connexion.controller.ts:14",{"_index":692,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["connexion.controller.ts:20",{"_index":695,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["connexion.controller.ts:26",{"_index":699,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["connexion.entity",{"_index":423,"title":{},"body":{"entities/Auth.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["connexion.entity.ts",{"_index":669,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"coverage.html":{}}}],["connexion.entity.ts:11",{"_index":676,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:14",{"_index":678,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:17",{"_index":681,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:20",{"_index":683,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:23",{"_index":679,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:26",{"_index":682,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:29",{"_index":677,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.entity.ts:8",{"_index":680,"title":{},"body":{"entities/HistoriqueConnexion.html":{}}}],["connexion.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["connexion.module.ts",{"_index":724,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{}}}],["connexion.service",{"_index":702,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["connexion.service.ts",{"_index":727,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{},"coverage.html":{}}}],["connexion.service.ts:18",{"_index":734,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["connexion.service.ts:24",{"_index":736,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["connexion.service.ts:28",{"_index":738,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["connexion.service.ts:9",{"_index":731,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["connexion/historique",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"entities/Auth.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"coverage.html":{}}}],["console.log(body.authsid",{"_index":605,"title":{},"body":{"controllers/ClientsController.html":{}}}],["const",{"_index":186,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(appointmentrepository",{"_index":172,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["constructor(articlesclientsrepository",{"_index":302,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["constructor(articlesrepository",{"_index":385,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(authrepository",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(clientsrepository",{"_index":639,"title":{},"body":{"injectables/ClientsService.html":{}}}],["constructor(historiqueconnexionrepository",{"_index":730,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{},"coverage.html":{}}}],["controller('appointments",{"_index":155,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["controller('articles",{"_index":277,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{}}}],["controller('auth",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('clients",{"_index":600,"title":{},"body":{"controllers/ClientsController.html":{}}}],["controller('historique",{"_index":703,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["cookie",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":328,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"injectables/ClientsService.html":{}}}],["countarticlesbyclientid",{"_index":252,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["countarticlesbyclientid(@param('id",{"_index":288,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["countarticlesbyclientid(clientid",{"_index":257,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["countclients",{"_index":572,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["countclients(@query('authsid",{"_index":614,"title":{},"body":{"controllers/ClientsController.html":{}}}],["countclients(authsid",{"_index":578,"title":{},"body":{"controllers/ClientsController.html":{}}}],["countclients(id",{"_index":642,"title":{},"body":{"injectables/ClientsService.html":{}}}],["cours",{"_index":567,"title":{},"body":{"entities/Clients.html":{}}}],["courses",{"_index":908,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":775,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createappointment",{"_index":138,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{}}}],["createappointment(@body",{"_index":159,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["createappointment(body",{"_index":140,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["createappointment(data",{"_index":177,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["createarticle",{"_index":341,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["createarticle(@body",{"_index":365,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["createarticle(article",{"_index":346,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["createarticleclient",{"_index":253,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["createarticleclient(@body",{"_index":284,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["createarticleclient(body",{"_index":260,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["createclient",{"_index":573,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["createclient(@body",{"_index":604,"title":{},"body":{"controllers/ClientsController.html":{}}}],["createclient(body",{"_index":582,"title":{},"body":{"controllers/ClientsController.html":{}}}],["createclient(name",{"_index":644,"title":{},"body":{"injectables/ClientsService.html":{}}}],["createclientarticles",{"_index":301,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["createclientarticles(clientid",{"_index":308,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["created_at",{"_index":105,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["createdatecolumn",{"_index":118,"title":{},"body":{"entities/Appointments.html":{}}}],["createhistoriqueconnexion",{"_index":687,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["createhistoriqueconnexion(@body",{"_index":705,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["createhistoriqueconnexion(body",{"_index":690,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["createhistoriqueconnexion(date",{"_index":733,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["current_timestamp",{"_index":217,"title":{},"body":{"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["data",{"_index":179,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["data.clientid",{"_index":189,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["data.end",{"_index":201,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["data.title",{"_index":199,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["database",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["datasource",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":117,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["date(data.end",{"_index":202,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["date(data.start",{"_index":200,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["date(date",{"_index":330,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["deeper",{"_index":904,"title":{},"body":{"index.html":{}}}],["default",{"_index":216,"title":{},"body":{"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["delete",{"_index":359,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["delete(':id",{"_index":370,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["delete(':id')@httpcode(204",{"_index":349,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["deletearticle",{"_index":342,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["deletearticle(@param('id",{"_index":372,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["deletearticle(id",{"_index":348,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":855,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":875,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":866,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":885,"title":{},"body":{"index.html":{}}}],["description",{"_index":209,"title":{},"body":{"entities/Articles.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":841,"title":{},"body":{"index.html":{}}}],["device",{"_index":671,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["devtools",{"_index":916,"title":{},"body":{"index.html":{}}}],["disable",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["discord",{"_index":901,"title":{},"body":{"index.html":{}}}],["dive",{"_index":903,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":776,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["double",{"_index":226,"title":{},"body":{"entities/Articles.html":{}}}],["e2e",{"_index":850,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":827,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":863,"title":{},"body":{"index.html":{}}}],["email",{"_index":406,"title":{},"body":{"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["en",{"_index":566,"title":{},"body":{"entities/Clients.html":{}}}],["end",{"_index":106,"title":{},"body":{"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{}}}],["end.sethours(23",{"_index":332,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["ensure",{"_index":861,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":920,"title":{},"body":{"index.html":{}}}],["entities",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{},"overview.html":{}}}],["entity",{"_index":100,"title":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{}},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":559,"title":{},"body":{"entities/Clients.html":{}}}],["error('client",{"_index":318,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["error('invalid",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('user",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(`article",{"_index":322,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["eslint",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["example",{"_index":837,"title":{},"body":{"index.html":{}}}],["experience",{"_index":906,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["express",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["extends",{"_index":749,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":761,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":767,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":772,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fast",{"_index":879,"title":{},"body":{"index.html":{}}}],["features",{"_index":889,"title":{},"body":{"index.html":{}}}],["few",{"_index":881,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["findall",{"_index":343,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/ClientsController.html":{}}}],["findall(@query('authsid",{"_index":601,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findall(authsid",{"_index":585,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findbyname",{"_index":344,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findbyname(@query('name",{"_index":368,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["findbyname(name",{"_index":353,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findbyprice",{"_index":384,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["findbyprice(price",{"_index":391,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["findclientbyname",{"_index":574,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["findclientbyname(@query('name",{"_index":616,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findclientbyname(name",{"_index":587,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["findclientbystatus",{"_index":575,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["findclientbystatus(@query('status",{"_index":622,"title":{},"body":{"controllers/ClientsController.html":{}}}],["findclientbystatus(status",{"_index":589,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["findclientsbyiduser",{"_index":636,"title":{},"body":{"injectables/ClientsService.html":{}}}],["findclientsbyiduser(id",{"_index":648,"title":{},"body":{"injectables/ClientsService.html":{}}}],["findcounthistorybyauthid",{"_index":728,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["findcounthistorybyauthid(authid",{"_index":735,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["findcounthistorybydate",{"_index":729,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["findcounthistorybydate(month",{"_index":737,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["findhistorybyauthid",{"_index":688,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["findhistorybyauthid(@body",{"_index":715,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["findhistorybyauthid(body",{"_index":693,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["findhistorybydate",{"_index":689,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["findhistorybydate(@query('month",{"_index":718,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["findhistorybydate(month",{"_index":696,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["focus",{"_index":888,"title":{},"body":{"index.html":{}}}],["follow",{"_index":924,"title":{},"body":{"index.html":{}}}],["found",{"_index":319,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"injectables/AuthService.html":{}}}],["framework",{"_index":825,"title":{},"body":{"index.html":{}}}],["full",{"_index":919,"title":{},"body":{"index.html":{}}}],["function",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":819,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":884,"title":{},"body":{"index.html":{}}}],["gagn",{"_index":569,"title":{},"body":{"entities/Clients.html":{}}}],["get('/')@httpcode(200",{"_index":149,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["get('/count",{"_index":713,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["get('/count')@httpcode(httpstatus.ok",{"_index":694,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["get('/count/month",{"_index":717,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["get('/count/month')@httpcode(httpstatus.ok",{"_index":698,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["get('articles/:id",{"_index":281,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('articles/:id')@httpcode(200",{"_index":270,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('client/articles/:id",{"_index":278,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('client/articles/:id')@httpcode(200",{"_index":264,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('clients",{"_index":290,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('clients')@httpcode(200",{"_index":267,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('cookie",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('cookie')@useguards(jwtauthguard",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('count",{"_index":613,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('count')@httpcode(200",{"_index":579,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('count/:id",{"_index":287,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('count/:id')@httpcode(200",{"_index":258,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["get('month/count",{"_index":627,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('month/count')@httpcode(200",{"_index":593,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('search",{"_index":367,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ClientsController.html":{}}}],["get('search')@httpcode(200",{"_index":354,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ClientsController.html":{}}}],["get('status",{"_index":621,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('status')@httpcode(200",{"_index":590,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('status/count",{"_index":624,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get('status/count')@httpcode(200",{"_index":597,"title":{},"body":{"controllers/ClientsController.html":{}}}],["get()@httpcode(200",{"_index":351,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/ClientsController.html":{}}}],["getappointments",{"_index":139,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{}}}],["getarticlesbyclientid",{"_index":254,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getarticlesbyclientid(@param('id",{"_index":279,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["getarticlesbyclientid(clientid",{"_index":263,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getarticlesclientsbydatebyclientid",{"_index":255,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getarticlesclientsbydatebyclientid(@query('id",{"_index":291,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["getarticlesclientsbydatebyclientid(clientid",{"_index":266,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getclientsbyarticleid",{"_index":256,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getclientsbyarticleid(@param('id",{"_index":282,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["getclientsbyarticleid(articleid",{"_index":269,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["getcookie",{"_index":426,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcookie(@req",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcookie(req",{"_index":430,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcount",{"_index":668,"title":{},"body":{"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["getcountbymonth",{"_index":576,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getcountbymonth(@query('month",{"_index":628,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getcountbymonth(month",{"_index":592,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getcountbymonthandauthsid",{"_index":637,"title":{},"body":{"injectables/ClientsService.html":{}}}],["getcountbymonthandauthsid(month",{"_index":650,"title":{},"body":{"injectables/ClientsService.html":{}}}],["getcountbystatusandauthsid",{"_index":638,"title":{},"body":{"injectables/ClientsService.html":{}}}],["getcountbystatusandauthsid(status",{"_index":652,"title":{},"body":{"injectables/ClientsService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":399,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/ClientsService.html":{}}}],["getpourcentagebystatus",{"_index":577,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getpourcentagebystatus(@query('status",{"_index":625,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getpourcentagebystatus(status",{"_index":596,"title":{},"body":{"controllers/ClientsController.html":{}}}],["getting",{"_index":821,"title":{"index.html":{}},"body":{}}],["graph",{"_index":911,"title":{},"body":{"index.html":{}}}],["grow",{"_index":934,"title":{},"body":{"index.html":{}}}],["hands",{"_index":905,"title":{},"body":{"index.html":{}}}],["handy",{"_index":894,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":909,"title":{},"body":{"index.html":{}}}],["here",{"_index":942,"title":{},"body":{"index.html":{}}}],["historique",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["historiqueconnexion",{"_index":413,"title":{"entities/HistoriqueConnexion.html":{}},"body":{"entities/Auth.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"coverage.html":{}}}],["historiqueconnexion.auth",{"_index":414,"title":{},"body":{"entities/Auth.html":{}}}],["historiqueconnexioncontroller",{"_index":684,"title":{"controllers/HistoriqueConnexionController.html":{}},"body":{"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"coverage.html":{}}}],["historiqueconnexionmodule",{"_index":45,"title":{"modules/HistoriqueConnexionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HistoriqueConnexionModule.html":{},"modules.html":{},"overview.html":{}}}],["historiqueconnexionrepository",{"_index":732,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["historiqueconnexions",{"_index":407,"title":{},"body":{"entities/Auth.html":{}}}],["historiqueconnexionservice",{"_index":701,"title":{"injectables/HistoriqueConnexionService.html":{}},"body":{"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":151,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["httpcode(200",{"_index":162,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{}}}],["httpcode(201",{"_index":158,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{}}}],["httpcode(204",{"_index":371,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["httpcode(httpstatus.created",{"_index":704,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["httpcode(httpstatus.ok",{"_index":714,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["httponly",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":948,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":700,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["id",{"_index":107,"title":{},"body":{"entities/Appointments.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"entities/Clients.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["identifier",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["if(!ispasswordvalid",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!user",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["if(req",{"_index":768,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoreexpiration",{"_index":771,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["information",{"_index":868,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":891,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":94,"title":{"injectables/AppService.html":{},"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":183,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["injectrepository(appointments",{"_index":184,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["injectrepository(articles",{"_index":315,"title":{},"body":{"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{}}}],["injectrepository(articlesclients",{"_index":314,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["injectrepository(auth",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["injectrepository(clients",{"_index":185,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ClientsService.html":{}}}],["injectrepository(historiqueconnexion",{"_index":739,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["install",{"_index":883,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":839,"title":{},"body":{"index.html":{}}}],["int",{"_index":244,"title":{},"body":{"entities/ArticlesClients.html":{}}}],["interact",{"_index":912,"title":{},"body":{"index.html":{}}}],["ip_address",{"_index":672,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["ispasswordvalid",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["job",{"_index":927,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":929,"title":{},"body":{"index.html":{}}}],["join",{"_index":940,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":764,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":451,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":766,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":505,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtstrategy",{"_index":498,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":945,"title":{},"body":{"index.html":{}}}],["key",{"_index":858,"title":{},"body":{"index.html":{}}}],["l'id",{"_index":194,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["lax",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["learn",{"_index":897,"title":{},"body":{"index.html":{}}}],["leftjoin('clients.auths",{"_index":655,"title":{},"body":{"injectables/ClientsService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["length",{"_index":220,"title":{},"body":{"entities/Articles.html":{},"entities/Clients.html":{}}}],["license",{"_index":951,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":932,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":926,"title":{},"body":{"index.html":{}}}],["literal",{"_index":141,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/JwtStrategy.html":{}}}],["logging",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":427,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(username",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":428,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":869,"title":{},"body":{"index.html":{}}}],["loop",{"_index":922,"title":{},"body":{"index.html":{}}}],["makes",{"_index":877,"title":{},"body":{"index.html":{}}}],["managing",{"_index":890,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":132,"title":{},"body":{"entities/Appointments.html":{},"entities/ArticlesClients.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{}}}],["manytoone(undefined",{"_index":112,"title":{},"body":{"entities/Appointments.html":{},"entities/ArticlesClients.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":873,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["miscellaneous",{"_index":818,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":931,"title":{},"body":{"index.html":{}}}],["mode",{"_index":843,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":595,"title":{},"body":{"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["more",{"_index":867,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":946,"title":{},"body":{"index.html":{}}}],["name",{"_index":145,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["name.replace",{"_index":619,"title":{},"body":{"controllers/ClientsController.html":{}}}],["need",{"_index":917,"title":{},"body":{"index.html":{}}}],["nest",{"_index":832,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":950,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":856,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":752,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["newclient",{"_index":658,"title":{},"body":{"injectables/ClientsService.html":{}}}],["newhistoriqueconnexion",{"_index":741,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["newtoken",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuser",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":824,"title":{},"body":{"index.html":{}}}],["non",{"_index":195,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["notfoundexception",{"_index":182,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["notfoundexception(`client",{"_index":192,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["nouveau",{"_index":561,"title":{},"body":{"entities/Clients.html":{}}}],["npm",{"_index":838,"title":{},"body":{"index.html":{}}}],["null",{"_index":203,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/JwtStrategy.html":{}}}],["nullable",{"_index":122,"title":{},"body":{"entities/Appointments.html":{},"entities/Clients.html":{}}}],["number",{"_index":124,"title":{},"body":{"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["offer",{"_index":928,"title":{},"body":{"index.html":{}}}],["official",{"_index":874,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":114,"title":{},"body":{"entities/Appointments.html":{},"entities/ArticlesClients.html":{}}}],["onetomany",{"_index":234,"title":{},"body":{"entities/Articles.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["onetomany(undefined",{"_index":213,"title":{},"body":{"entities/Articles.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["onupdate",{"_index":230,"title":{},"body":{"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["open",{"_index":933,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["os",{"_index":673,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":954,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":792,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":273,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{}}}],["parameters",{"_index":144,"title":{},"body":{"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["parseint(process.env.database_port",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["parser",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":918,"title":{},"body":{"index.html":{}}}],["passport",{"_index":763,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":760,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":754,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passthrough",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":774,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perdu",{"_index":568,"title":{},"body":{"entities/Clients.html":{}}}],["phone",{"_index":540,"title":{},"body":{"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["platform",{"_index":872,"title":{},"body":{"index.html":{}}}],["please",{"_index":900,"title":{},"body":{"index.html":{}}}],["port",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":864,"title":{},"body":{"index.html":{}}}],["post",{"_index":152,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["post('/create",{"_index":157,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["post('/create')@httpcode(201",{"_index":142,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["post('create",{"_index":603,"title":{},"body":{"controllers/ClientsController.html":{}}}],["post('create')@httpcode(201",{"_index":583,"title":{},"body":{"controllers/ClientsController.html":{}}}],["post('login",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(200",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(jwtauthguard",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@httpcode(201",{"_index":443,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@httpcode(201",{"_index":261,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{}}}],["post()@httpcode(httpstatus.created",{"_index":691,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["prefix",{"_index":136,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["prettier/prettier",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["price",{"_index":393,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["priceht",{"_index":210,"title":{},"body":{"entities/Articles.html":{}}}],["pricettc",{"_index":211,"title":{},"body":{"entities/Articles.html":{}}}],["primarygeneratedcolumn",{"_index":125,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{}}}],["private",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.database_host",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_name",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_password",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.database_user",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":845,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":823,"title":{},"body":{"index.html":{}}}],["project",{"_index":835,"title":{},"body":{"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["properties",{"_index":103,"title":{"properties.html":{}},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{},"entities/HistoriqueConnexion.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["public",{"_index":251,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/ClientsService.html":{}}}],["put",{"_index":360,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["put(':id",{"_index":374,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["put(':id')@httpcode(200",{"_index":357,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["quantity",{"_index":237,"title":{},"body":{"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{}}}],["query",{"_index":274,"title":{},"body":{"controllers/ArticlesClientsController.html":{},"controllers/ArticlesController.html":{},"controllers/ClientsController.html":{},"controllers/HistoriqueConnexionController.html":{}}}],["query('authid",{"_index":719,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["query('authsid",{"_index":618,"title":{},"body":{"controllers/ClientsController.html":{}}}],["query('date",{"_index":292,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["query('status",{"_index":617,"title":{},"body":{"controllers/ClientsController.html":{}}}],["questions",{"_index":898,"title":{},"body":{"index.html":{}}}],["r.article",{"_index":338,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["read",{"_index":941,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["ready",{"_index":854,"title":{},"body":{"index.html":{}}}],["real",{"_index":913,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":429,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(username",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["relation",{"_index":323,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["relations",{"_index":206,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{}}}],["repository",{"_index":173,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/ClientsService.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["req",{"_index":434,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["req.cookies",{"_index":769,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.cookies['auth_token",{"_index":770,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["req.user",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.id",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.username",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{}}}],["requiring",{"_index":880,"title":{},"body":{"index.html":{}}}],["res",{"_index":431,"title":{},"body":{"controllers/AuthController.html":{}}}],["res({passthrough",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie('auth_token",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('auth_token",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}],["resources",{"_index":892,"title":{},"body":{"index.html":{}}}],["response",{"_index":436,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":335,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["result.map((r",{"_index":337,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["role",{"_index":408,"title":{},"body":{"entities/Auth.html":{}}}],["run",{"_index":840,"title":{},"body":{"index.html":{}}}],["runs",{"_index":862,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved",{"_index":325,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["savedrelations",{"_index":320,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["savedrelations.push(saved",{"_index":327,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["scalable",{"_index":828,"title":{},"body":{"index.html":{}}}],["secret",{"_index":506,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":773,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{}}}],["select('count(clients.id",{"_index":665,"title":{},"body":{"injectables/ClientsService.html":{}}}],["server",{"_index":829,"title":{},"body":{"index.html":{}}}],["setup",{"_index":836,"title":{},"body":{"index.html":{}}}],["side",{"_index":830,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":882,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["sponsors",{"_index":936,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["src/appointments/appointments.controller.ts",{"_index":135,"title":{},"body":{"controllers/AppointmentsController.html":{},"coverage.html":{}}}],["src/appointments/appointments.controller.ts:13",{"_index":143,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["src/appointments/appointments.controller.ts:19",{"_index":150,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["src/appointments/appointments.entity",{"_index":564,"title":{},"body":{"entities/Clients.html":{}}}],["src/appointments/appointments.entity.ts",{"_index":102,"title":{},"body":{"entities/Appointments.html":{},"coverage.html":{}}}],["src/appointments/appointments.entity.ts:11",{"_index":129,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:14",{"_index":127,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:17",{"_index":123,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:20",{"_index":116,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:23",{"_index":119,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:26",{"_index":131,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.entity.ts:8",{"_index":126,"title":{},"body":{"entities/Appointments.html":{}}}],["src/appointments/appointments.module.ts",{"_index":167,"title":{},"body":{"modules/AppointmentsModule.html":{}}}],["src/appointments/appointments.service.ts",{"_index":171,"title":{},"body":{"injectables/AppointmentsService.html":{},"coverage.html":{}}}],["src/appointments/appointments.service.ts:18",{"_index":178,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["src/appointments/appointments.service.ts:34",{"_index":181,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["src/appointments/appointments.service.ts:9",{"_index":175,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["src/articles",{"_index":232,"title":{},"body":{"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Clients.html":{},"coverage.html":{}}}],["src/articles/articles.controller.ts",{"_index":340,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/articles/articles.controller.ts:14",{"_index":352,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/articles/articles.controller.ts:20",{"_index":347,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/articles/articles.controller.ts:26",{"_index":355,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/articles/articles.controller.ts:32",{"_index":350,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/articles/articles.controller.ts:38",{"_index":358,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/articles/articles.entity",{"_index":248,"title":{},"body":{"entities/ArticlesClients.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{}}}],["src/articles/articles.entity.ts",{"_index":207,"title":{},"body":{"entities/Articles.html":{},"coverage.html":{}}}],["src/articles/articles.entity.ts:12",{"_index":225,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:15",{"_index":222,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:18",{"_index":227,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:21",{"_index":229,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:24",{"_index":228,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:27",{"_index":218,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:34",{"_index":231,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:37",{"_index":215,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.entity.ts:9",{"_index":223,"title":{},"body":{"entities/Articles.html":{}}}],["src/articles/articles.module.ts",{"_index":380,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["src/articles/articles.service.ts",{"_index":383,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/articles/articles.service.ts:14",{"_index":389,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:18",{"_index":387,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:22",{"_index":390,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:28",{"_index":392,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:34",{"_index":388,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:38",{"_index":394,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/articles/articles.service.ts:8",{"_index":386,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/auth/auth.controller.ts",{"_index":425,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":444,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.entity",{"_index":565,"title":{},"body":{"entities/Clients.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["src/auth/auth.entity.ts",{"_index":405,"title":{},"body":{"entities/Auth.html":{},"coverage.html":{}}}],["src/auth/auth.entity.ts:12",{"_index":421,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:15",{"_index":417,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:18",{"_index":412,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:21",{"_index":419,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:24",{"_index":411,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:27",{"_index":420,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:30",{"_index":410,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:33",{"_index":415,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.entity.ts:9",{"_index":416,"title":{},"body":{"entities/Auth.html":{}}}],["src/auth/auth.module.ts",{"_index":499,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/clients/clients.controller.ts",{"_index":571,"title":{},"body":{"controllers/ClientsController.html":{},"coverage.html":{}}}],["src/clients/clients.controller.ts:14",{"_index":586,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:20",{"_index":584,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:27",{"_index":580,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:33",{"_index":588,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:45",{"_index":591,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:51",{"_index":598,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.controller.ts:57",{"_index":594,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.entity",{"_index":133,"title":{},"body":{"entities/Appointments.html":{},"modules/AppointmentsModule.html":{},"injectables/AppointmentsService.html":{},"entities/ArticlesClients.html":{},"modules/ArticlesClientsModule.html":{},"injectables/ArticlesClientsService.html":{},"entities/Auth.html":{}}}],["src/clients/clients.entity.ts",{"_index":534,"title":{},"body":{"entities/Clients.html":{},"coverage.html":{}}}],["src/clients/clients.entity.ts:10",{"_index":555,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:13",{"_index":556,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:16",{"_index":554,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:19",{"_index":558,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:22",{"_index":552,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:25",{"_index":543,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:28",{"_index":551,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:35",{"_index":562,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:38",{"_index":553,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:45",{"_index":563,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:48",{"_index":549,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:51",{"_index":545,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.entity.ts:54",{"_index":547,"title":{},"body":{"entities/Clients.html":{}}}],["src/clients/clients.module.ts",{"_index":633,"title":{},"body":{"modules/ClientsModule.html":{}}}],["src/clients/clients.service.ts",{"_index":635,"title":{},"body":{"injectables/ClientsService.html":{},"coverage.html":{}}}],["src/clients/clients.service.ts:18",{"_index":649,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:25",{"_index":645,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:43",{"_index":643,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:47",{"_index":646,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:53",{"_index":647,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:59",{"_index":653,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:64",{"_index":651,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/clients/clients.service.ts:9",{"_index":641,"title":{},"body":{"injectables/ClientsService.html":{}}}],["src/historique",{"_index":422,"title":{},"body":{"entities/Auth.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"modules/HistoriqueConnexionModule.html":{},"injectables/HistoriqueConnexionService.html":{},"coverage.html":{}}}],["src/jwt",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":108,"title":{},"body":{"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"index.html":{}}}],["start.sethours(0",{"_index":331,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["start:dev",{"_index":844,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":846,"title":{},"body":{"index.html":{}}}],["started",{"_index":822,"title":{"index.html":{}},"body":{}}],["starter",{"_index":834,"title":{},"body":{"index.html":{}}}],["statements",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":541,"title":{},"body":{"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{}}}],["stay",{"_index":921,"title":{},"body":{"index.html":{}}}],["steps",{"_index":859,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":878,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":762,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strict",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":765,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":899,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":952,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":860,"title":{},"body":{"index.html":{}}}],["test",{"_index":849,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":852,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":851,"title":{},"body":{"index.html":{}}}],["tests",{"_index":847,"title":{},"body":{"index.html":{}}}],["text",{"_index":542,"title":{},"body":{"entities/Clients.html":{}}}],["thanks",{"_index":935,"title":{},"body":{"index.html":{}}}],["this.appointmentrepository.create",{"_index":198,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["this.appointmentrepository.find",{"_index":205,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["this.appointmentrepository.save(appointment",{"_index":204,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["this.appointmentservice.createappointment(body",{"_index":161,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["this.appointmentservice.getappointments",{"_index":163,"title":{},"body":{"controllers/AppointmentsController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlesclientsrepository.count",{"_index":329,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.articlesclientsrepository.create",{"_index":324,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.articlesclientsrepository.find",{"_index":316,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.articlesclientsrepository.save(relation",{"_index":326,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.articlesclientsservice.countarticlesbyclientid(clientid",{"_index":289,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["this.articlesclientsservice.createclientarticles(body.clientid",{"_index":285,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["this.articlesclientsservice.getarticlesbyclientid(clientid",{"_index":280,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["this.articlesclientsservice.getarticlesclientsbydatebyclientid(clientid",{"_index":293,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["this.articlesclientsservice.getclientsbyarticleid(articleid",{"_index":283,"title":{},"body":{"controllers/ArticlesClientsController.html":{}}}],["this.articlesrepository.createquerybuilder('articles",{"_index":397,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.delete(id",{"_index":401,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.find",{"_index":395,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.findone",{"_index":321,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.articlesrepository.findoneby",{"_index":403,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.save(article",{"_index":396,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.update(id",{"_index":402,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.createarticle(article",{"_index":366,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.deletearticle(id",{"_index":373,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findall",{"_index":364,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findbyname(name",{"_index":369,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.updatearticle(id",{"_index":376,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.authrepository.create",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.findone",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.authrepository.findone({where",{"_index":740,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["this.authrepository.save(newuser",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.login(body.username",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(body.username",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authsrepository.findone",{"_index":657,"title":{},"body":{"injectables/ClientsService.html":{}}}],["this.clientrepository.findoneby",{"_index":188,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["this.clientsrepository.count({where",{"_index":661,"title":{},"body":{"injectables/ClientsService.html":{}}}],["this.clientsrepository.create",{"_index":659,"title":{},"body":{"injectables/ClientsService.html":{}}}],["this.clientsrepository.createquerybuilder('clients",{"_index":654,"title":{},"body":{"injectables/ClientsService.html":{}}}],["this.clientsrepository.findone",{"_index":317,"title":{},"body":{"injectables/ArticlesClientsService.html":{}}}],["this.clientsrepository.save(newclient",{"_index":660,"title":{},"body":{"injectables/ClientsService.html":{}}}],["this.clientsservice.countclients(authsid",{"_index":615,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.createclient(body.name",{"_index":606,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.findclientbyname(name",{"_index":620,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.findclientbystatus(status",{"_index":623,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.findclientsbyiduser(authsid",{"_index":602,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.getcountbymonthandauthsid(month",{"_index":629,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.clientsservice.getcountbystatusandauthsid(status",{"_index":626,"title":{},"body":{"controllers/ClientsController.html":{}}}],["this.historiqueconnexionrepository.count({where",{"_index":744,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["this.historiqueconnexionrepository.create",{"_index":742,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["this.historiqueconnexionrepository.createquerybuilder('historiqueconnexion",{"_index":745,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["this.historiqueconnexionrepository.save(newhistoriqueconnexion",{"_index":743,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["this.historiqueconnexionservice.createhistoriqueconnexion(body.date",{"_index":706,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["this.historiqueconnexionservice.findcounthistorybyauthid(body.authid",{"_index":716,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["this.historiqueconnexionservice.findcounthistorybydate(month",{"_index":720,"title":{},"body":{"controllers/HistoriqueConnexionController.html":{}}}],["this.jwtservice.sign(payload",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":190,"title":{},"body":{"injectables/AppointmentsService.html":{},"injectables/ArticlesClientsService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["time",{"_index":914,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":121,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["title",{"_index":109,"title":{},"body":{"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{}}}],["token",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["touch",{"_index":943,"title":{},"body":{"index.html":{}}}],["trouv",{"_index":196,"title":{},"body":{"injectables/AppointmentsService.html":{}}}],["true",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"controllers/AuthController.html":{},"entities/Clients.html":{}}}],["tva",{"_index":212,"title":{},"body":{"entities/Articles.html":{}}}],["twitter",{"_index":949,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"controllers/AppointmentsController.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"controllers/ArticlesClientsController.html":{},"injectables/ArticlesClientsService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"controllers/ClientsController.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["typeorm",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"entities/Appointments.html":{},"injectables/AppointmentsService.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"injectables/ArticlesClientsService.html":{},"injectables/ArticlesService.html":{},"entities/Auth.html":{},"injectables/AuthService.html":{},"entities/Clients.html":{},"injectables/ClientsService.html":{},"entities/HistoriqueConnexion.html":{},"injectables/HistoriqueConnexionService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{}}}],["typeormmodule.forfeature([appointments",{"_index":170,"title":{},"body":{"modules/AppointmentsModule.html":{}}}],["typeormmodule.forfeature([articles",{"_index":382,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["typeormmodule.forfeature([articlesclients",{"_index":299,"title":{},"body":{"modules/ArticlesClientsModule.html":{}}}],["typeormmodule.forfeature([auth",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([clients",{"_index":634,"title":{},"body":{"modules/ClientsModule.html":{}}}],["typeormmodule.forfeature([historiqueconnexion",{"_index":726,"title":{},"body":{"modules/HistoriqueConnexionModule.html":{}}}],["typeormmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":833,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":759,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":560,"title":{},"body":{"entities/Clients.html":{}}}],["unit",{"_index":848,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":148,"title":{},"body":{"controllers/AppointmentsController.html":{},"controllers/ArticlesClientsController.html":{},"controllers/AuthController.html":{},"controllers/ClientsController.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":960,"title":{},"body":{"properties.html":{}}}],["updatearticle",{"_index":345,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["updatearticle(@param('id",{"_index":375,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["updatearticle(id",{"_index":356,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["updated_at",{"_index":110,"title":{},"body":{"entities/Appointments.html":{},"entities/Articles.html":{},"entities/ArticlesClients.html":{},"entities/Auth.html":{},"entities/Clients.html":{}}}],["updatedatecolumn",{"_index":130,"title":{},"body":{"entities/Appointments.html":{}}}],["updates",{"_index":923,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":445,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.id",{"_index":468,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.password",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{}}}],["useragent",{"_index":674,"title":{},"body":{"entities/HistoriqueConnexion.html":{},"controllers/HistoriqueConnexionController.html":{},"injectables/HistoriqueConnexionService.html":{}}}],["username",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"entities/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["using",{"_index":915,"title":{},"body":{"index.html":{}}}],["uytrdfgh98765hbnk",{"_index":507,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validate",{"_index":755,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":757,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["varchar",{"_index":219,"title":{},"body":{"entities/Articles.html":{},"entities/Clients.html":{}}}],["version",{"_index":958,"title":{},"body":{"properties.html":{}}}],["video",{"_index":907,"title":{},"body":{"index.html":{}}}],["visit",{"_index":896,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":910,"title":{},"body":{"index.html":{}}}],["watch",{"_index":842,"title":{},"body":{"index.html":{}}}],["website",{"_index":947,"title":{},"body":{"index.html":{}}}],["where('articles.name",{"_index":398,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["where('articles.price",{"_index":400,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["where('auths.id",{"_index":656,"title":{},"body":{"injectables/ClientsService.html":{}}}],["where('clients.name",{"_index":662,"title":{},"body":{"injectables/ClientsService.html":{}}}],["where('clients.status",{"_index":664,"title":{},"body":{"injectables/ClientsService.html":{}}}],["where('month(clients.created_at",{"_index":666,"title":{},"body":{"injectables/ClientsService.html":{}}}],["where('month(historiqueconnexion.date",{"_index":746,"title":{},"body":{"injectables/HistoriqueConnexionService.html":{}}}],["working",{"_index":895,"title":{},"body":{"index.html":{}}}],["world",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":925,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":939,"title":{},"body":{"index.html":{}}}],["you're",{"_index":853,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AppointmentsModule.html":{},"modules/ArticlesClientsModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/ClientsModule.html":{},"modules/HistoriqueConnexionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppointmentsModule\n\nAppointmentsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppointmentsModule->AppModule\n\n\n\n\n\nArticlesClientsModule\n\nArticlesClientsModule\n\nAppModule -->\n\nArticlesClientsModule->AppModule\n\n\n\n\n\nArticlesModule\n\nArticlesModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nHistoriqueConnexionModule\n\nHistoriqueConnexionModule\n\nAppModule -->\n\nHistoriqueConnexionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppointmentsModule\n                        \n                        \n                            ArticlesClientsModule\n                        \n                        \n                            ArticlesModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ClientsModule\n                        \n                        \n                            HistoriqueConnexionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ClientsModule } from './clients/clients.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DataSource } from 'typeorm';\nimport { ArticlesModule } from './articles/articles.module';\nimport { ArticlesClientsModule } from './articles-clients/articles-clients.module';\nimport { AppointmentsModule } from './appointments/appointments.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { HistoriqueConnexionModule } from './historique-connexion/historique-connexion.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({isGlobal: true}),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DATABASE_HOST,\n      port: parseInt(process.env.DATABASE_PORT),\n      username: process.env.DATABASE_USER,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_NAME,\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      synchronize: true,\n      logging: true,\n      autoLoadEntities: true,\n    }),\n    ClientsModule,\n    ArticlesModule,\n    ArticlesClientsModule,\n    AppointmentsModule,\n    AuthModule,\n    HistoriqueConnexionModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {\n  constructor(\n    private dataSource: DataSource\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Appointments.html":{"url":"entities/Appointments.html","title":"entity - Appointments","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Appointments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appointments/appointments.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                client\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                end\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                start\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Clients\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, client => client.appointments, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/appointments/appointments.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn, UpdateDateColumn } from 'typeorm';\nimport { Clients } from 'src/clients/clients.entity';\n\n@Entity()\nexport class Appointments {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column({ type: 'timestamp' })\n  start: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  end: Date;\n\n  @ManyToOne(() => Clients, (client) => client.appointments, { onDelete: 'CASCADE' })\n  client: Clients;\n\n  @CreateDateColumn()\n  created_at: Date;\n\n  @UpdateDateColumn()\n  updated_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppointmentsController.html":{"url":"controllers/AppointmentsController.html","title":"controller - AppointmentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppointmentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appointments/appointments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                appointments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createAppointment\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAppointments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createAppointment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAppointment(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/appointments/appointments.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAppointments\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAppointments()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/appointments/appointments.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, HttpCode, Post } from '@nestjs/common';\nimport { AppointmentsService } from './appointments.service';\n\n@Controller('appointments')\nexport class AppointmentsController {\n    constructor(\n        private appointmentService: AppointmentsService\n    ) {}\n\n    @Post('/create')\n    @HttpCode(201)\n    async createAppointment(@Body() body: { title: string; start: string; end?: string; clientId: number }) {\n        return this.appointmentService.createAppointment(body);\n    }\n\n    @Get('/')\n    @HttpCode(200)\n    async getAppointments() {\n        return this.appointmentService.getAppointments();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppointmentsModule.html":{"url":"modules/AppointmentsModule.html","title":"module - AppointmentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AppointmentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppointmentsModule\n\n\n\ncluster_AppointmentsModule_exports\n\n\n\ncluster_AppointmentsModule_providers\n\n\n\n\nAppointmentsService \n\nAppointmentsService \n\n\n\nAppointmentsModule\n\nAppointmentsModule\n\nAppointmentsService  -->\n\nAppointmentsModule->AppointmentsService \n\n\n\n\n\nAppointmentsService\n\nAppointmentsService\n\nAppointmentsModule -->\n\nAppointmentsService->AppointmentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/appointments/appointments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppointmentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppointmentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppointmentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { AppointmentsService } from './appointments.service';\nimport { AppointmentsController } from './appointments.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Appointments } from './appointments.entity';\nimport { Clients } from 'src/clients/clients.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Appointments, Clients]),\n  ],\n  providers: [AppointmentsService],\n  controllers: [AppointmentsController],\n  exports: [AppointmentsService],\n})\nexport class AppointmentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppointmentsService.html":{"url":"injectables/AppointmentsService.html","title":"injectable - AppointmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppointmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appointments/appointments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAppointment\n                            \n                            \n                                    Async\n                                getAppointments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appointmentRepository: Repository, clientRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/appointments/appointments.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appointmentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAppointment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAppointment(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/appointments/appointments.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAppointments\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAppointments()\n                \n            \n\n\n                    \n                        \n                            Defined in src/appointments/appointments.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Appointments } from './appointments.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Clients } from 'src/clients/clients.entity';\n\n@Injectable()\nexport class AppointmentsService {\n    constructor(\n        @InjectRepository(Appointments)\n        private appointmentRepository: Repository,\n\n        @InjectRepository(Clients)\n        private clientRepository: Repository,\n    ) {}\n\n    async createAppointment(data: { title: string; start: string; end?: string; clientId: number }): Promise {\n        const client = await this.clientRepository.findOneBy({ id: data.clientId });\n        if (!client) {\n            throw new NotFoundException(`Client avec l'ID ${data.clientId} non trouvé.`);\n        }\n\n        const appointment = this.appointmentRepository.create({\n            title: data.title,\n            start: new Date(data.start),\n            end: data.end ? new Date(data.end) : null,\n            client: client,\n        });\n\n        return await this.appointmentRepository.save(appointment);\n    }\n\n    async getAppointments(): Promise {\n        return await this.appointmentRepository.find({ relations: ['client'] });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Articles.html":{"url":"entities/Articles.html","title":"entity - Articles","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Articles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles/articles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                articlesClients\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                priceHT\n                            \n                            \n                                    \n                                priceTTC\n                            \n                            \n                                    \n                                tva\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        articlesClients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ArticlesClients[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, articlesClients => articlesClients.article)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 100})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priceHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priceTTC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tva\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles/articles.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { ArticlesClients } from 'src/articles-clients/articles-clients.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from 'typeorm';\n\n@Entity()\nexport class Articles {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ type: 'varchar', length: 100 })\n    name: string;\n\n    @Column({ type: 'varchar', length: 255 })\n    description: string;\n\n    @Column({ type: 'double' })\n    priceHT: number;\n\n    @Column({ type: 'double' })\n    tva: number;\n\n    @Column({ type: 'double' })\n    priceTTC: number;\n\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n    created_at: Date;\n\n    @Column({ \n        type: 'timestamp', \n        default: () => 'CURRENT_TIMESTAMP', \n        onUpdate: 'CURRENT_TIMESTAMP' \n    })\n    updated_at: Date;\n\n    @OneToMany(() => ArticlesClients, (articlesClients) => articlesClients.article)\n    articlesClients: ArticlesClients[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ArticlesClients.html":{"url":"entities/ArticlesClients.html","title":"entity - ArticlesClients","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ArticlesClients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles-clients/articles-clients.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                article\n                            \n                            \n                                    \n                                client\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Articles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, article => article.articlesClients, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Clients\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, client => client.clientArticles, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/articles-clients/articles-clients.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Articles } from 'src/articles/articles.entity';\nimport { Clients } from 'src/clients/clients.entity';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class ArticlesClients {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ManyToOne(() => Clients, (client) => client.clientArticles, { onDelete: 'CASCADE' })\n    client: Clients;\n\n  @ManyToOne(() => Articles, (article) => article.articlesClients, { onDelete: 'CASCADE' })\n    article: Articles;\n\n    @Column({ type: 'int', default: 0 })\n    quantity: number;\n\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n    created_at: Date;\n\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })\n    updated_at: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesClientsController.html":{"url":"controllers/ArticlesClientsController.html","title":"controller - ArticlesClientsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesClientsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles-clients/articles-clients.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles-clients\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                countArticlesByClientId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                createArticleClient\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getArticlesByClientId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getArticlesClientsByDateByClientId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getClientsByArticleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        countArticlesByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countArticlesByClientId(clientId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        createArticleClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArticleClient(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getArticlesByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArticlesByClientId(clientId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('client/articles/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getArticlesClientsByDateByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArticlesClientsByDateByClientId(clientId: number, date: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('clients')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getClientsByArticleId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientsByArticleId(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('articles/:id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, HttpCode, Param, Post, Query } from '@nestjs/common';\nimport { ArticlesClientsService } from './articles-clients.service';\n\n@Controller('articles-clients')\nexport class ArticlesClientsController {\n    constructor(\n        private articlesClientsService: ArticlesClientsService\n    ) {}\n\n    @Get('client/articles/:id')\n    @HttpCode(200)\n    public async getArticlesByClientId(@Param('id') clientId: number) {\n        return this.articlesClientsService.getArticlesByClientId(clientId);\n    }\n\n    @Get('articles/:id')\n    @HttpCode(200)\n    public async getClientsByArticleId(@Param('id') articleId: number) {\n        return this.articlesClientsService.getClientsByArticleId(articleId);\n    }\n\n    @Post()\n    @HttpCode(201)\n    public async createArticleClient(@Body() body: { clientId: number; articles: { articleId: number; quantity: number }[] }) {\n        return this.articlesClientsService.createClientArticles(body.clientId, body.articles);\n    }\n\n    @Get('count/:id')\n    @HttpCode(200)\n    public async countArticlesByClientId(@Param('id') clientId: number) {\n        return this.articlesClientsService.countArticlesByClientId(clientId);\n    }\n\n    @Get('clients')\n    @HttpCode(200)\n    public async getArticlesClientsByDateByClientId(@Query('id') clientId: number, @Query('date') date: Date) {\n        return this.articlesClientsService.getArticlesClientsByDateByClientId(clientId, date);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticlesClientsModule.html":{"url":"modules/ArticlesClientsModule.html","title":"module - ArticlesClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticlesClientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticlesClientsModule\n\n\n\ncluster_ArticlesClientsModule_providers\n\n\n\ncluster_ArticlesClientsModule_exports\n\n\n\n\nArticlesClientsService \n\nArticlesClientsService \n\n\n\nArticlesClientsModule\n\nArticlesClientsModule\n\nArticlesClientsService  -->\n\nArticlesClientsModule->ArticlesClientsService \n\n\n\n\n\nArticlesClientsService\n\nArticlesClientsService\n\nArticlesClientsModule -->\n\nArticlesClientsService->ArticlesClientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/articles-clients/articles-clients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesClientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesClientsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArticlesClientsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticlesClients } from './articles-clients.entity';\nimport { ArticlesClientsController } from './articles-clients.controller';\nimport { ArticlesClientsService } from './articles-clients.service';\nimport { Articles } from 'src/articles/articles.entity';\nimport { Clients } from 'src/clients/clients.entity';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([ArticlesClients, Articles, Clients]),\n    ],\n    controllers: [ArticlesClientsController],\n    providers: [ArticlesClientsService],\n    exports: [ArticlesClientsService],\n})\nexport class ArticlesClientsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesClientsService.html":{"url":"injectables/ArticlesClientsService.html","title":"injectable - ArticlesClientsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesClientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles-clients/articles-clients.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countArticlesByClientId\n                            \n                            \n                                    Public\n                                    Async\n                                createClientArticles\n                            \n                            \n                                    Public\n                                    Async\n                                getArticlesByClientId\n                            \n                            \n                                    Public\n                                    Async\n                                getArticlesClientsByDateByClientId\n                            \n                            \n                                    Public\n                                    Async\n                                getClientsByArticleId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesClientsRepository: Repository, articlesRepository: Repository, clientsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/articles-clients/articles-clients.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesClientsRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countArticlesByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    countArticlesByClientId(clientId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createClientArticles\n                        \n                    \n                \n            \n            \n                \n                        \n                    createClientArticles(clientId: number, articles: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                articles\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getArticlesByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArticlesByClientId(clientId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getArticlesClientsByDateByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArticlesClientsByDateByClientId(clientId: number, date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getClientsByArticleId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientsByArticleId(articleId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles-clients/articles-clients.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ArticlesClients } from './articles-clients.entity';\nimport { Between, Repository } from 'typeorm';\nimport { Articles } from 'src/articles/articles.entity';\nimport { Clients } from 'src/clients/clients.entity';\n\n@Injectable()\nexport class ArticlesClientsService {\n    constructor(\n        @InjectRepository(ArticlesClients)\n        private articlesClientsRepository: Repository,\n        \n        @InjectRepository(Articles)\n        private articlesRepository: Repository,\n\n        @InjectRepository(Clients)\n        private clientsRepository: Repository,    \n    ) {}\n\n    public async getArticlesByClientId(clientId: number): Promise {\n        return await this.articlesClientsRepository.find({\n            where: { client: { id: clientId } },\n            relations: ['article', 'client'],\n        })\n    }\n\n    public async getClientsByArticleId(articleId: number): Promise {\n        return await this.articlesClientsRepository.find({\n            where: { article: { id: articleId } },\n            relations: ['client', 'article'],\n        })\n    }\n\n    public async createClientArticles(\n    clientId: number,\n    articles: { articleId: number; quantity: number }[],\n    ): Promise {\n    const client = await this.clientsRepository.findOne({ where: { id: clientId } });\n    if (!client) throw new Error('Client not found');\n\n    const savedRelations: ArticlesClients[] = [];\n\n    for (const { articleId, quantity } of articles) {\n        const article = await this.articlesRepository.findOne({ where: { id: articleId } });\n        if (!article) {\n        throw new Error(`Article with ID ${articleId} not found`);\n        }\n\n        const relation = this.articlesClientsRepository.create({\n        client,\n        article,\n        quantity,\n        });\n\n        const saved = await this.articlesClientsRepository.save(relation);\n        savedRelations.push(saved);\n    }\n\n    return savedRelations;\n    }\n\n    public async countArticlesByClientId(clientId: number): Promise {\n        const count = await this.articlesClientsRepository.count({\n            where: { client: { id: clientId } },\n        });\n        return count;\n    }\n\n    public async getArticlesClientsByDateByClientId(clientId: number, date: Date): Promise {\n        \n        const start = new Date(date);\n        start.setHours(0, 0, 0, 0);\n\n        const end = new Date(date);\n        end.setHours(23, 59, 59, 999);\n        \n        const result = await this.articlesClientsRepository.find({\n            where: { client: { id: clientId }, created_at: Between(start, end) },\n            relations: ['article', 'client'],\n        });\n\n        return result.map((r) => r.article)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createArticle\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteArticle\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findByName\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArticle(article: Articles)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/articles/articles.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                article\n                                            \n                                                            Articles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteArticle(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/articles/articles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles/articles.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles/articles.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateArticle(id: number, article: Articles)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/articles/articles.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                article\n                                            \n                                                            Articles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, Query } from '@nestjs/common';\nimport { ArticlesService } from './articles.service';\nimport { Articles } from './articles.entity';\n\n@Controller('articles')\nexport class ArticlesController {\n    constructor(\n        private articlesService: ArticlesService\n    ) {}\n\n    @Get()\n    @HttpCode(200)\n    async findAll(): Promise {\n        return this.articlesService.findAll();\n    }\n\n    @Post()\n    @HttpCode(201)\n    async createArticle(@Body() article: Articles): Promise {\n        return this.articlesService.createArticle(article);\n    }\n\n    @Get('search')\n    @HttpCode(200)\n    async findByName(@Query('name') name: string): Promise {\n        return this.articlesService.findByName(name);\n    }\n\n    @Delete(':id')\n    @HttpCode(204)\n    async deleteArticle(@Param('id') id: number): Promise {\n        return this.articlesService.deleteArticle(id);\n    }\n\n    @Put(':id')\n    @HttpCode(200)\n    async updateArticle(@Param('id') id: number, @Body() article: Articles): Promise {\n        return this.articlesService.updateArticle(id, article);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticlesModule.html":{"url":"modules/ArticlesModule.html","title":"module - ArticlesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticlesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_exports\n\n\n\ncluster_ArticlesModule_providers\n\n\n\n\nArticlesService \n\nArticlesService \n\n\n\nArticlesModule\n\nArticlesModule\n\nArticlesService  -->\n\nArticlesModule->ArticlesService \n\n\n\n\n\nArticlesService\n\nArticlesService\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/articles/articles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Articles } from './articles.entity';\nimport { ArticlesService } from './articles.service';\nimport { ArticlesController } from './articles.controller';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([Articles]),\n    ],\n    providers: [ArticlesService],\n    exports: [ArticlesService],\n    controllers: [ArticlesController],\n})\nexport class ArticlesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/articles/articles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createArticle\n                            \n                            \n                                    Public\n                                    Async\n                                deleteArticle\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByName\n                            \n                            \n                                    Public\n                                    Async\n                                findByPrice\n                            \n                            \n                                    Public\n                                    Async\n                                updateArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/articles/articles.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArticle(article: Articles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                article\n                                            \n                                                            Articles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteArticle(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByPrice(price: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                price\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateArticle\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateArticle(id: number, article: Articles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/articles/articles.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                article\n                                            \n                                                            Articles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Articles } from './articles.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ArticlesService {\n    constructor(\n        @InjectRepository(Articles)\n        private articlesRepository: Repository\n    ) {}\n\n    public async findAll(): Promise {\n        return await this.articlesRepository.find();\n    }\n\n    public async createArticle(article: Articles): Promise {\n        return await this.articlesRepository.save(article);\n    }\n\n    public async findByName(name: string): Promise {\n        return await this.articlesRepository.createQueryBuilder('articles')\n            .where('articles.name LIKE :name', { name: `%${name}%` })\n            .getMany();\n    }\n\n    public async findByPrice(price: number): Promise {\n        return await this.articlesRepository.createQueryBuilder('articles')\n            .where('articles.price = :price', { price })\n            .getMany();\n    }\n\n    public async deleteArticle(id: number): Promise {\n        await this.articlesRepository.delete(id);\n    }\n\n    public async updateArticle(id: number, article: Articles): Promise {\n        await this.articlesRepository.update(id, article);\n        return this.articlesRepository.findOneBy({ id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Auth.html":{"url":"entities/Auth.html","title":"entity - Auth","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                client\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                historiqueConnexions\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Clients[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, clients => clients.auths)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historiqueConnexions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoriqueConnexion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, historiqueConnexion => historiqueConnexion.auth)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Clients } from 'src/clients/clients.entity';\nimport { HistoriqueConnexion } from 'src/historique-connexion/historique-connexion.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from 'typeorm';\n\n@Entity()\nexport class Auth {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    username: string;\n\n    @Column()\n    password: string;\n\n    @Column()\n    email: string;\n\n    @Column({default: 0})\n    role: number;\n\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n    created_at: Date;\n\n    @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })\n    updated_at: Date;\n\n    @OneToMany(() => Clients, (clients) => clients.auths)\n    client: Clients[];\n\n    @OneToMany(() => HistoriqueConnexion, (historiqueConnexion) => historiqueConnexion.auth)\n    historiqueConnexions: HistoriqueConnexion[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCookie(req: any, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('cookie')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: literal type, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: any, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, HttpCode, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Response } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from 'src/jwt-auth/jwt-auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private jwtService: JwtService,\n    ) {}\n\n    @Post('register')\n    @HttpCode(201)\n    async register(@Body() body: { username: string; password: string; email: string }) {\n        return this.authService.register(body.username, body.password, body.email);\n    }\n\n    @Post('login')\n    @HttpCode(200)\n    async login(@Body() body: { username: string; password: string }, @Res({passthrough: true}) res: Response) {\n        \n        const user = await this.authService.login(body.username, body.password);\n\n        const payload = { username: user.username, id: user.id };\n        const token = this.jwtService.sign(payload, { expiresIn: '30m' });\n\n        res.cookie('auth_token', token, {\n            httpOnly: true,\n            sameSite: 'strict',\n            maxAge: 30 * 60 * 1000, // 30min\n            secure: true,\n        })\n\n        return { user };\n    }\n\n    @Get('cookie')\n    @UseGuards(JwtAuthGuard)\n    async getCookie(@Req() req: any, @Res({ passthrough: true }) res: any) {\n        const payload = { username: req.user.username, id: req.user.id }\n        const newToken = this.jwtService.sign(payload, { expiresIn: '30m' })\n\n        res.cookie('auth_token', newToken, {\n            httpOnly: true,\n            maxAge: 30 * 60 * 1000, // 30min\n            sameSite: 'lax',\n        })\n\n        return req.user\n    }\n\n    @Post('logout')\n    @UseGuards(JwtAuthGuard)\n    async logout(@Req() req: any, @Res({ passthrough: true }) res: Response) {\n        res.clearCookie('auth_token')\n        return req.user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Auth } from './auth.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from 'src/jwt-auth/jwt-auth.strategy';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Auth]),\n    JwtModule.register({\n      secret: \"uytrdfgh98765hbnk\",\n      signOptions: { expiresIn: '1h' },\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService, JwtModule],\n})\n\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(username: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Auth } from './auth.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @InjectRepository(Auth)\n        private authRepository: Repository,\n    ) {}\n\n    async register(username: string, password: string, email: string): Promise {\n        const hashPassword = await bcrypt.hash(password, 10);\n        const newUser = this.authRepository.create({ username, password: hashPassword, email });\n        return this.authRepository.save(newUser);\n    }\n\n    async login(username: string, password: string): Promise {\n        \n        const user = await this.authRepository.findOne({ where: { username } })\n        if(!user) {\n            throw new Error('User not found');\n        }\n\n        const isPasswordValid = await bcrypt.compare(password, user.password);\n        if(!isPasswordValid) {\n            throw new Error('Invalid password');\n        }\n\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Clients.html":{"url":"entities/Clients.html","title":"entity - Clients","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Clients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/clients.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                appointments\n                            \n                            \n                                    \n                                auths\n                            \n                            \n                                    \n                                clientArticles\n                            \n                            \n                                    \n                                comments\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appointments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Appointments[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, appointment => appointment.client)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auth\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, auth => auth.client)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientArticles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ArticlesClients[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, articlesClients => articlesClients.client)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, name: 'client_comments'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: undefined, default: 'Nouveau'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/clients.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Appointments } from 'src/appointments/appointments.entity';\nimport { ArticlesClients } from 'src/articles-clients/articles-clients.entity';\nimport { Auth } from 'src/auth/auth.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class Clients {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  email: string;\n\n  @Column({ type: 'varchar', length: 20 })\n  phone: string;\n\n  @Column({ type: 'varchar', length: 255 })\n  company: string;\n\n  @Column({ type: 'text' })\n  address: string;\n\n  @Column({ type: 'text', nullable: true, name: 'client_comments' })\n  comments: string;\n\n  @Column({ \n    type: 'enum', \n    enum: ['Nouveau', 'En cours', 'Perdu', 'Gagné'], \n    default: 'Nouveau' \n  })\n  status: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  created_at: Date;\n\n  @Column({ \n    type: 'timestamp', \n    default: () => 'CURRENT_TIMESTAMP', \n    onUpdate: 'CURRENT_TIMESTAMP' \n  })\n  updated_at: Date;\n\n  @OneToMany(() => ArticlesClients, (articlesClients) => articlesClients.client)\n  clientArticles: ArticlesClients[];\n\n  @OneToMany(() => Appointments, (appointment) => appointment.client)\n  appointments: Appointments[];\n\n  @ManyToOne(() => Auth, (auth) => auth.client)\n  auths: Auth;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientsController.html":{"url":"controllers/ClientsController.html","title":"controller - ClientsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/clients.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                clients\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                countClients\n                            \n                            \n                                    \n                                    \n                                    Async\n                                createClient\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findClientByName\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findClientByStatus\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getCountByMonth\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getPourcentageByStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        countClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    countClients(authsId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    createClient(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@HttpCode(201)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(authsId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findClientByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findClientByName(name: string, status: string, authsId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findClientByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    findClientByStatus(status: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('status')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getCountByMonth\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCountByMonth(month: string, authsId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('month/count')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                month\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getPourcentageByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPourcentageByStatus(status: string, authsId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('status/count')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/clients/clients.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, HttpCode, Post, Query } from '@nestjs/common';\nimport { ClientsService } from './clients.service';\nimport { Clients } from './clients.entity';\n\n@Controller('clients')\nexport class ClientsController {\n    constructor(\n        private clientsService: ClientsService\n    ) {}\n\n    @Get()\n    @HttpCode(200)\n    async findAll(@Query('authsId') authsId: number): Promise {\n        return this.clientsService.findClientsByIdUser(authsId);\n    }\n\n    @Post('create')\n    @HttpCode(201)\n    async createClient(@Body() body: {  name: string, email: string, phone: string, company: string, address: string, comments: string, status: string, authsId: number }): Promise {\n        console.log(body.authsId)\n        return this.clientsService.createClient(body.name, body.email, body.phone, body.company, body.address, body.comments, body.status, body.authsId);\n    }\n\n    @Get('count')\n    @HttpCode(200)\n    async countClients(@Query('authsId') authsId: number): Promise {\n        return this.clientsService.countClients(authsId);\n    }\n\n    @Get('search')\n    @HttpCode(200)\n    async findClientByName(@Query('name') name: string, @Query('status') status: string, @Query('authsId') authsId: number) {\n        if (!name) {\n            return this.clientsService.findClientsByIdUser(authsId);\n        }\n\n        name = name.replace('%', '');\n\n        return this.clientsService.findClientByName(name, status);\n    }\n\n    @Get('status')\n    @HttpCode(200)\n    async findClientByStatus(@Query('status') status: string) {\n        return this.clientsService.findClientByStatus(status);\n    }\n\n    @Get('status/count')\n    @HttpCode(200)\n    async getPourcentageByStatus(@Query('status') status: string, @Query('authsId') authsId: number) {\n        return this.clientsService.getCountByStatusAndAuthsId(status, authsId);\n    }\n\n    @Get('month/count')\n    @HttpCode(200)\n    async getCountByMonth(@Query('month') month: string, @Query('authsId') authsId: number) {\n        return this.clientsService.getCountByMonthAndAuthsId(month, authsId);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_exports\n\n\n\ncluster_ClientsModule_providers\n\n\n\n\nClientsService \n\nClientsService \n\n\n\nClientsModule\n\nClientsModule\n\nClientsService  -->\n\nClientsModule->ClientsService \n\n\n\n\n\nClientsService\n\nClientsService\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { ClientsService } from './clients.service';\nimport { ClientsController } from './clients.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Clients } from './clients.entity';\nimport { Auth } from 'src/auth/auth.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Clients, Auth]),\n  ],\n  providers: [ClientsService],\n  exports: [ClientsService],\n  controllers: [ClientsController],\n})\nexport class ClientsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientsService.html":{"url":"injectables/ClientsService.html","title":"injectable - ClientsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/clients.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                countClients\n                            \n                            \n                                    Public\n                                    Async\n                                createClient\n                            \n                            \n                                    Public\n                                    Async\n                                findClientByName\n                            \n                            \n                                    Public\n                                    Async\n                                findClientByStatus\n                            \n                            \n                                    Public\n                                    Async\n                                findClientsByIdUser\n                            \n                            \n                                    Public\n                                    Async\n                                getCountByMonthAndAuthsId\n                            \n                            \n                                    Public\n                                    Async\n                                getCountByStatusAndAuthsId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientsRepository: Repository, authsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/clients/clients.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        countClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    countClients(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    createClient(name: string, email: string, phone: string, company: string, address: string, comments: string, status: string, authsId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                phone\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                company\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                comments\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findClientByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findClientByName(name: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findClientByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    findClientByStatus(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findClientsByIdUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findClientsByIdUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getCountByMonthAndAuthsId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCountByMonthAndAuthsId(month: string, authsId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                month\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getCountByStatusAndAuthsId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCountByStatusAndAuthsId(status: string, authsId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clients/clients.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authsId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Clients } from './clients.entity';\nimport { Repository } from 'typeorm';\nimport { Auth } from 'src/auth/auth.entity';\n\n@Injectable()\nexport class ClientsService {\n    constructor(\n        @InjectRepository(Clients)\n        private clientsRepository: Repository,\n\n        @InjectRepository(Auth)\n        private authsRepository: Repository,\n    ) {}\n    \n    public async findClientsByIdUser(id: number): Promise {\n        return await this.clientsRepository.createQueryBuilder('clients')\n            .leftJoin('clients.auths', 'auths')\n            .where('auths.id = :id', { id })\n            .getMany();\n    }\n\n    public async createClient(name: string, email: string, phone: string, company: string, address: string, comments: string, status: string, authsId: number): Promise {\n        \n        const auth = await this.authsRepository.findOne({ where: { id: authsId } });\n        \n        const newClient = await this.clientsRepository.create({\n            name,\n            email,\n            phone,\n            company,\n            address,\n            comments,\n            status,\n            auths: auth,\n        })\n\n        return await this.clientsRepository.save(newClient);\n    }\n\n    public async countClients(id: number): Promise {\n        return await this.clientsRepository.count({where: {auths: {id}}});\n    }\n\n    public async findClientByName(name: string, status: string): Promise {\n        return await this.clientsRepository.createQueryBuilder('clients')\n            .where('clients.name LIKE :name AND clients.status = :status', { name: `%${name}%`, status: status })\n            .getMany();\n    }\n\n    public async findClientByStatus(status: string): Promise {\n        return await this.clientsRepository.createQueryBuilder('clients')\n            .where('clients.status = :status', { status })\n            .getMany();\n    }\n\n    public async getCountByStatusAndAuthsId(status: string, authsId: number): Promise {\n        const count = await this.clientsRepository.count({where: {status, auths: {id: authsId}}});\n        return count;\n    }\n\n    public async getCountByMonthAndAuthsId(month: string, authsId: number): Promise {\n        const count = await this.clientsRepository.createQueryBuilder('clients')\n            .select('COUNT(clients.id) as count')\n            .leftJoin('clients.auths', 'auths')\n            .where('MONTH(clients.created_at) = :month AND clients.auths.id = :authsId', { month, authsId })\n            .getCount();\n        \n        return count;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/HistoriqueConnexion.html":{"url":"entities/HistoriqueConnexion.html","title":"entity - HistoriqueConnexion","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  HistoriqueConnexion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historique-connexion/historique-connexion.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                auth\n                            \n                            \n                                    \n                                browser\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                device\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                os\n                            \n                            \n                                    \n                                userAgent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auth\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, auth => auth.historiqueConnexions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        browser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        device\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historique-connexion/historique-connexion.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Auth } from 'src/auth/auth.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class HistoriqueConnexion {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ManyToOne(() => Auth , (auth) => auth.historiqueConnexions)\n    auth: Auth;\n\n    @Column()\n    date: Date;\n\n    @Column()\n    ip_address: string;\n\n    @Column()\n    userAgent: string;\n\n    @Column()\n    device: string;\n\n    @Column()\n    os: string;\n\n    @Column()\n    browser: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HistoriqueConnexionController.html":{"url":"controllers/HistoriqueConnexionController.html","title":"controller - HistoriqueConnexionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HistoriqueConnexionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historique-connexion/historique-connexion.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                historique-connexion\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createHistoriqueConnexion\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findHistoryByAuthId\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findHistoryByDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createHistoriqueConnexion\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHistoriqueConnexion(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findHistoryByAuthId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findHistoryByAuthId(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findHistoryByDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findHistoryByDate(month: string, authId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/count/month')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                month\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, HttpCode, HttpStatus, Post, Query } from '@nestjs/common';\nimport { HistoriqueConnexionService } from './historique-connexion.service';\nimport { HistoriqueConnexion } from './historique-connexion.entity';\n\n@Controller('historique-connexion')\nexport class HistoriqueConnexionController {\n    constructor(\n        private historiqueConnexionService: HistoriqueConnexionService,\n    ) {}\n\n    @Post()\n    @HttpCode(HttpStatus.CREATED)\n    async createHistoriqueConnexion(@Body() body: { date: Date, ip_address: string, userAgent: string, device: string, os: string, browser: string, authId: number }): Promise {\n        return this.historiqueConnexionService.createHistoriqueConnexion(body.date, body.ip_address, body.userAgent, body.device, body.os, body.browser, body.authId);\n    }\n\n    @Get('/count')\n    @HttpCode(HttpStatus.OK)\n    async findHistoryByAuthId(@Body() body: { authId: number }): Promise {\n        return this.historiqueConnexionService.findCountHistoryByAuthId(body.authId);\n    }\n\n    @Get('/count/month')\n    @HttpCode(HttpStatus.OK)\n    async findHistoryByDate(@Query('month') month: string, @Query('authId') authId: number): Promise {\n        return this.historiqueConnexionService.findCountHistoryByDate(month, authId);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HistoriqueConnexionModule.html":{"url":"modules/HistoriqueConnexionModule.html","title":"module - HistoriqueConnexionModule","body":"\n                   \n\n\n\n\n    Modules\n    HistoriqueConnexionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HistoriqueConnexionModule\n\n\n\ncluster_HistoriqueConnexionModule_exports\n\n\n\ncluster_HistoriqueConnexionModule_providers\n\n\n\n\nHistoriqueConnexionService \n\nHistoriqueConnexionService \n\n\n\nHistoriqueConnexionModule\n\nHistoriqueConnexionModule\n\nHistoriqueConnexionService  -->\n\nHistoriqueConnexionModule->HistoriqueConnexionService \n\n\n\n\n\nHistoriqueConnexionService\n\nHistoriqueConnexionService\n\nHistoriqueConnexionModule -->\n\nHistoriqueConnexionService->HistoriqueConnexionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/historique-connexion/historique-connexion.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HistoriqueConnexionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HistoriqueConnexionController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HistoriqueConnexionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { HistoriqueConnexionService } from './historique-connexion.service';\nimport { HistoriqueConnexionController } from './historique-connexion.controller';\nimport { HistoriqueConnexion } from './historique-connexion.entity';\nimport { Auth } from 'src/auth/auth.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([HistoriqueConnexion, Auth])],\n  exports: [HistoriqueConnexionService],\n  providers: [HistoriqueConnexionService],\n  controllers: [HistoriqueConnexionController]\n})\nexport class HistoriqueConnexionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoriqueConnexionService.html":{"url":"injectables/HistoriqueConnexionService.html","title":"injectable - HistoriqueConnexionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoriqueConnexionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historique-connexion/historique-connexion.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createHistoriqueConnexion\n                            \n                            \n                                    Async\n                                findCountHistoryByAuthId\n                            \n                            \n                                    Async\n                                findCountHistoryByDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(historiqueConnexionRepository: Repository, authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/historique-connexion/historique-connexion.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        historiqueConnexionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createHistoriqueConnexion\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHistoriqueConnexion(date: Date, ip_address: string, userAgent: string, device: string, os: string, browser: string, authId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ip_address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userAgent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                device\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                os\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                browser\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCountHistoryByAuthId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCountHistoryByAuthId(authId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCountHistoryByDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCountHistoryByDate(month: string, authId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/historique-connexion/historique-connexion.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                month\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { HistoriqueConnexion } from './historique-connexion.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Auth } from 'src/auth/auth.entity';\n\n@Injectable()\nexport class HistoriqueConnexionService {\n    constructor(\n        @InjectRepository(HistoriqueConnexion)\n        private historiqueConnexionRepository: Repository,\n\n        @InjectRepository(Auth)\n        private authRepository: Repository,\n    ) {}\n\n    async createHistoriqueConnexion(date: Date, ip_address: string, userAgent: string, device: string, os: string, browser: string, authId: number): Promise {\n        const auth = await this.authRepository.findOne({where: {id: authId}});\n        const newHistoriqueConnexion = this.historiqueConnexionRepository.create({ date, ip_address, userAgent, device, os, browser, auth });\n        return this.historiqueConnexionRepository.save(newHistoriqueConnexion);\n    }\n\n    async findCountHistoryByAuthId(authId: number): Promise {\n        return this.historiqueConnexionRepository.count({where: {auth: {id: authId}}});\n    }\n\n    async findCountHistoryByDate(month: string, authId: number): Promise {\n        return this.historiqueConnexionRepository.createQueryBuilder('historiqueConnexion')\n            .where('MONTH(historiqueConnexion.date) = :month', { month })\n            .andWhere('historiqueConnexion.auth.id = :authId', { authId })\n            .getCount();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwt-auth/jwt-auth.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/jwt-auth/jwt-auth.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jwt-auth/jwt-auth.strategy.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { Auth } from 'src/auth/auth.entity'\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(Auth)\n    private authRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (req) => {\n          if(req && req.cookies) {\n            return req.cookies['auth_token'];\n          }\n          return null;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: \"uytrdfgh98765hbnk\",\n    })\n  }\n\n  async validate(payload: { username: string, id: number }) {\n      const user = await this.authRepository.findOne({ where: { username: payload.username } })\n      if(!user) {\n          throw new UnauthorizedException();\n      }\n\n      return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/appointments/appointments.controller.ts\n            \n            controller\n            AppointmentsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/appointments/appointments.entity.ts\n            \n            entity\n            Appointments\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/appointments/appointments.service.ts\n            \n            injectable\n            AppointmentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/articles-clients/articles-clients.controller.ts\n            \n            controller\n            ArticlesClientsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/articles-clients/articles-clients.entity.ts\n            \n            entity\n            ArticlesClients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/articles-clients/articles-clients.service.ts\n            \n            injectable\n            ArticlesClientsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/articles/articles.entity.ts\n            \n            entity\n            Articles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.entity.ts\n            \n            entity\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/clients/clients.controller.ts\n            \n            controller\n            ClientsController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/clients/clients.entity.ts\n            \n            entity\n            Clients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/clients/clients.service.ts\n            \n            injectable\n            ClientsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/historique-connexion/historique-connexion.controller.ts\n            \n            controller\n            HistoriqueConnexionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/historique-connexion/historique-connexion.entity.ts\n            \n            entity\n            HistoriqueConnexion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/historique-connexion/historique-connexion.service.ts\n            \n            injectable\n            HistoriqueConnexionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jwt-auth/jwt-auth.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^10.4.17\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            co : ^4.6.0\n        \n            cookie-parser : ^1.4.7\n        \n            mysql2 : ^3.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.23\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppointmentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticlesClientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticlesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HistoriqueConnexionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppointmentsModule\n\n\n\ncluster_AppointmentsModule_exports\n\n\n\ncluster_AppointmentsModule_providers\n\n\n\ncluster_ArticlesClientsModule\n\n\n\ncluster_ArticlesClientsModule_exports\n\n\n\ncluster_ArticlesClientsModule_providers\n\n\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_exports\n\n\n\ncluster_ArticlesModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_exports\n\n\n\ncluster_ClientsModule_providers\n\n\n\ncluster_HistoriqueConnexionModule\n\n\n\ncluster_HistoriqueConnexionModule_exports\n\n\n\ncluster_HistoriqueConnexionModule_providers\n\n\n\n\nAppointmentsModule\n\nAppointmentsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppointmentsModule->AppModule\n\n\n\n\n\nAppointmentsService \n\nAppointmentsService \n\nAppointmentsService  -->\n\nAppointmentsModule->AppointmentsService \n\n\n\n\n\nArticlesClientsModule\n\nArticlesClientsModule\n\nAppModule -->\n\nArticlesClientsModule->AppModule\n\n\n\n\n\nArticlesClientsService \n\nArticlesClientsService \n\nArticlesClientsService  -->\n\nArticlesClientsModule->ArticlesClientsService \n\n\n\n\n\nArticlesModule\n\nArticlesModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nArticlesService \n\nArticlesService \n\nArticlesService  -->\n\nArticlesModule->ArticlesService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nClientsService \n\nClientsService \n\nClientsService  -->\n\nClientsModule->ClientsService \n\n\n\n\n\nHistoriqueConnexionModule\n\nHistoriqueConnexionModule\n\nAppModule -->\n\nHistoriqueConnexionModule->AppModule\n\n\n\n\n\nHistoriqueConnexionService \n\nHistoriqueConnexionService \n\nHistoriqueConnexionService  -->\n\nHistoriqueConnexionModule->HistoriqueConnexionService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppointmentsService\n\nAppointmentsService\n\nAppointmentsModule -->\n\nAppointmentsService->AppointmentsModule\n\n\n\n\n\nArticlesClientsService\n\nArticlesClientsService\n\nArticlesClientsModule -->\n\nArticlesClientsService->ArticlesClientsModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nClientsService\n\nClientsService\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\nHistoriqueConnexionService\n\nHistoriqueConnexionService\n\nHistoriqueConnexionModule -->\n\nHistoriqueConnexionService->HistoriqueConnexionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
